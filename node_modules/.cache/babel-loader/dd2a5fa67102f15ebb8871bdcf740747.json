{"ast":null,"code":"var _jsxFileName = \"D:\\\\VinetiWorkSpace\\\\final-project-GG\\\\src\\\\components\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Switch } from '../utils/headerButtonSwitch';\nimport { headerButtons } from \"../utils/configs\";\nimport { logout } from \"../utils/API\";\nimport { ChangeActionLoggedIn, ChangeActionLoading, mapStateToProps } from '../redux/actions';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  _s();\n\n  let state = props.appState;\n  const dispatch = props.dispatch;\n  const location = useLocation();\n  let history = useHistory();\n  const [buttons, setButtons] = useState(headerButtons.loggedOut);\n  useEffect(() => {\n    if (state.isLoading === false) {\n      if (state.loggedIn) {\n        setButtons(headerButtons.loggedIn);\n      } else {\n        setButtons(headerButtons.loggedOut);\n      }\n    }\n  }, [state.loggedIn]);\n\n  const onSelect = async (event, button) => {\n    if (event.metaKey || event.ctrlKey) {\n      return;\n    }\n\n    if (button === 'Logout') {\n      dispatch(ChangeActionLoading({\n        'isLoading': true\n      }));\n      await logout().then(() => dispatch(ChangeActionLoggedIn({\n        'isLoading': false,\n        'loggedIn': false,\n        'userType': '',\n        'userId': ''\n      }))).then();\n    }\n\n    history.push(Switch(button, location, state));\n  };\n\n  const button = buttons.map(button => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => onSelect(event, button),\n      className: \"btn btn-outline-success me-1\",\n      type: \"submit\",\n      children: button\n    }, button, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar navbar-light bg-light\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"navbar-brand\",\n        children: \"GG Clone App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"d-flex\",\n        children: button\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"ZD92A0igNBVvnHtLn/iao74+5+M=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = Header;\nexport default connect(mapStateToProps)(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/components/Header.js"],"names":["React","useEffect","useState","useHistory","useLocation","Switch","headerButtons","logout","ChangeActionLoggedIn","ChangeActionLoading","mapStateToProps","connect","Header","props","state","appState","dispatch","location","history","buttons","setButtons","loggedOut","isLoading","loggedIn","onSelect","event","button","metaKey","ctrlKey","then","push","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAAQC,oBAAR,EACQC,mBADR,EAEQC,eAFR,QAE8B,kBAF9B;AAGA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,MAAIC,KAAK,GAAGD,KAAK,CAACE,QAAlB;AACA,QAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAvB;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,MAAIc,OAAO,GAAGf,UAAU,EAAxB;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAACI,aAAa,CAACe,SAAf,CAAtC;AAEApB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGa,KAAK,CAACQ,SAAN,KAAoB,KAAvB,EAA8B;AAC1B,UAAGR,KAAK,CAACS,QAAT,EAAmB;AACfH,QAAAA,UAAU,CAACd,aAAa,CAACiB,QAAf,CAAV;AACH,OAFD,MAGK;AACDH,QAAAA,UAAU,CAACd,aAAa,CAACe,SAAf,CAAV;AACH;AACJ;AAEJ,GAVQ,EAUN,CAACP,KAAK,CAACS,QAAP,CAVM,CAAT;;AAYA,QAAMC,QAAQ,GAAG,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AACtC,QAAID,KAAK,CAACE,OAAN,IAAiBF,KAAK,CAACG,OAA3B,EAAoC;AAChC;AACH;;AACD,QAAIF,MAAM,KAAK,QAAf,EAAyB;AACrBV,MAAAA,QAAQ,CAACP,mBAAmB,CAAC;AAAC,qBAAa;AAAd,OAAD,CAApB,CAAR;AACA,YAAMF,MAAM,GACTsB,IADG,CACE,MAAMb,QAAQ,CAACR,oBAAoB,CAAC;AACtC,qBAAa,KADyB;AAEtC,oBAAY,KAF0B;AAGtC,oBAAY,EAH0B;AAItC,kBAAU;AAJ4B,OAAD,CAArB,CADhB,EAOHqB,IAPG,EAAN;AAQH;;AACDX,IAAAA,OAAO,CAACY,IAAR,CAAazB,MAAM,CAACqB,MAAD,EAAST,QAAT,EAAmBH,KAAnB,CAAnB;AACH,GAhBD;;AAkBA,QAAMY,MAAM,GAAGP,OAAO,CAACY,GAAR,CAAaL,MAAD,IAAY;AACnC,wBACE;AACQ,MAAA,OAAO,EAAGD,KAAD,IAAWD,QAAQ,CAACC,KAAD,EAAQC,MAAR,CADpC;AAEQ,MAAA,SAAS,EAAC,8BAFlB;AAGQ,MAAA,IAAI,EAAC,QAHb;AAAA,gBAGuBA;AAHvB,OAAaA,MAAb;AAAA;AAAA;AAAA;AAAA,YADF;AAKE,GANS,CAAf;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,kBACKA;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAvDD;;GAAMd,M;UAGeR,W,EACHD,U;;;KAJZS,M;AAyDN,eAAeD,OAAO,CAACD,eAAD,CAAP,CAAyBE,MAAzB,CAAf","sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { Switch } from '../utils/headerButtonSwitch'\r\nimport { headerButtons } from \"../utils/configs\"\r\nimport { logout } from \"../utils/API\";\r\nimport {ChangeActionLoggedIn,\r\n        ChangeActionLoading,\r\n        mapStateToProps} from '../redux/actions'\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Header = (props) => {\r\n    let state = props.appState\r\n    const dispatch = props.dispatch\r\n    const location = useLocation();\r\n    let history = useHistory();\r\n    const [buttons, setButtons] = useState(headerButtons.loggedOut)\r\n    \r\n    useEffect(()=>{\r\n        if(state.isLoading === false) {\r\n            if(state.loggedIn) {\r\n                setButtons(headerButtons.loggedIn)\r\n            }\r\n            else {\r\n                setButtons(headerButtons.loggedOut)\r\n            }\r\n        }\r\n        \r\n    }, [state.loggedIn])\r\n\r\n    const onSelect = async (event, button) => {\r\n        if (event.metaKey || event.ctrlKey) {\r\n            return;\r\n        }\r\n        if (button === 'Logout') {\r\n            dispatch(ChangeActionLoading({'isLoading': true}))\r\n            await logout()\r\n              .then(() => dispatch(ChangeActionLoggedIn({\r\n                  'isLoading': false,\r\n                  'loggedIn': false,\r\n                  'userType': '',\r\n                  'userId': ''\r\n              })))\r\n              .then()\r\n        }\r\n        history.push(Switch(button, location, state))\r\n    }\r\n    \r\n    const button = buttons.map((button) => {\r\n        return(\r\n          <button key={button}\r\n                  onClick={(event) => onSelect(event, button)}\r\n                  className=\"btn btn-outline-success me-1\"\r\n                  type=\"submit\">{button}</button>\r\n        )})\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n                <p className=\"navbar-brand\">GG Clone App</p>\r\n                <form className=\"d-flex\">\r\n                    {button}\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header)"]},"metadata":{},"sourceType":"module"}
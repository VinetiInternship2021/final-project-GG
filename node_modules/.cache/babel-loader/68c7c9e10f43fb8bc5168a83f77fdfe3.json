{"ast":null,"code":"import { login } from './API';\nimport { ChangeActionLoading, ChangeActionLoggedIn } from '../redux/actions';\n\nconst onClick = (event, Fields, SetFields, State, Dispatch, History) => {\n  event.preventDefault();\n\n  const Login = async (fields, setFields, state, dispatch, history) => {\n    const params = {\n      session: { ...fields,\n        remember_me: fields.remember_me === true ? '1' : '0'\n      }\n    };\n    await login(params).then(response => {\n      dispatch(ChangeActionLoggedIn({ ...state,\n        isLoading: false,\n        loggedIn: true,\n        userType: response.data.model_name,\n        userId: response.data.user.id\n      }));\n      history.push(`/${response.data.model_name}/${response.data.user.id}`);\n    }).catch(response => {\n      dispatch(ChangeActionLoading(false));\n      setFields({ ...fields,\n        alert: response.message\n      });\n    });\n  };\n\n  Login(Fields, SetFields, State, Dispatch, History).then();\n};\n\nexport default onClick;","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/utils/LoginOnClick.js"],"names":["login","ChangeActionLoading","ChangeActionLoggedIn","onClick","event","Fields","SetFields","State","Dispatch","History","preventDefault","Login","fields","setFields","state","dispatch","history","params","session","remember_me","then","response","isLoading","loggedIn","userType","data","model_name","userId","user","id","push","catch","alert","message"],"mappings":"AAAA,SAASA,KAAT,QAAsB,OAAtB;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,kBAA1D;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA4CC,OAA5C,KAAwD;AACtEL,EAAAA,KAAK,CAACM,cAAN;;AACA,QAAMC,KAAK,GAAG,OAAOC,MAAP,EAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,QAAjC,EAA2CC,OAA3C,KAAuD;AACnE,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE,EACP,GAAGN,MADI;AAEPO,QAAAA,WAAW,EAAEP,MAAM,CAACO,WAAP,KAAuB,IAAvB,GAA8B,GAA9B,GAAoC;AAF1C;AADI,KAAf;AAMA,UAAMnB,KAAK,CAACiB,MAAD,CAAL,CACHG,IADG,CACGC,QAAD,IAAc;AAClBN,MAAAA,QAAQ,CAACb,oBAAoB,CAAC,EAC5B,GAAGY,KADyB;AAE5BQ,QAAAA,SAAS,EAAE,KAFiB;AAG5BC,QAAAA,QAAQ,EAAE,IAHkB;AAI5BC,QAAAA,QAAQ,EAAEH,QAAQ,CAACI,IAAT,CAAcC,UAJI;AAK5BC,QAAAA,MAAM,EAAEN,QAAQ,CAACI,IAAT,CAAcG,IAAd,CAAmBC;AALC,OAAD,CAArB,CAAR;AAOAb,MAAAA,OAAO,CAACc,IAAR,CAAc,IAAGT,QAAQ,CAACI,IAAT,CAAcC,UAAW,IAAGL,QAAQ,CAACI,IAAT,CAAcG,IAAd,CAAmBC,EAAG,EAAnE;AACD,KAVG,EAWHE,KAXG,CAWIV,QAAD,IAAc;AACnBN,MAAAA,QAAQ,CAACd,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACAY,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaoB,QAAAA,KAAK,EAAEX,QAAQ,CAACY;AAA7B,OAAD,CAAT;AACD,KAdG,CAAN;AAeD,GAtBD;;AAwBAtB,EAAAA,KAAK,CAACN,MAAD,EAASC,SAAT,EAAoBC,KAApB,EAA2BC,QAA3B,EAAqCC,OAArC,CAAL,CACGW,IADH;AAED,CA5BD;;AA8BA,eAAejB,OAAf","sourcesContent":["import { login } from './API';\nimport { ChangeActionLoading, ChangeActionLoggedIn } from '../redux/actions';\n\nconst onClick = (event, Fields, SetFields, State, Dispatch, History) => {\n  event.preventDefault();\n  const Login = async (fields, setFields, state, dispatch, history) => {\n    const params = {\n      session: {\n        ...fields,\n        remember_me: fields.remember_me === true ? '1' : '0',\n      },\n    };\n    await login(params)\n      .then((response) => {\n        dispatch(ChangeActionLoggedIn({\n          ...state,\n          isLoading: false,\n          loggedIn: true,\n          userType: response.data.model_name,\n          userId: response.data.user.id,\n        }));\n        history.push(`/${response.data.model_name}/${response.data.user.id}`);\n      })\n      .catch((response) => {\n        dispatch(ChangeActionLoading(false));\n        setFields({ ...fields, alert: response.message });\n      });\n  };\n\n  Login(Fields, SetFields, State, Dispatch, History)\n    .then();\n};\n\nexport default onClick;\n"]},"metadata":{},"sourceType":"module"}
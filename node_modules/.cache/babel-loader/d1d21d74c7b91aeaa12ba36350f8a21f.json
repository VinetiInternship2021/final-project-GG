{"ast":null,"code":"var _jsxFileName = \"D:\\\\VinetiWorkSpace\\\\final-project-GG\\\\src\\\\components\\\\AppRoutes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route, useLocation, Switch } from 'react-router-dom';\nimport { appRoutes } from '../utils/configs';\nimport Header from './Header';\nimport Signup from './Signup';\nimport Login from './Login';\nimport ClientSignup from './Client/ClientSignup';\nimport DriverSignup from './Driver/DriverSignup';\nimport DriverLogin from './Driver/DriverLogin';\nimport DriverPage from './Driver/DriverPage';\nimport DriverProfile from './Driver/DriverProfile';\nimport ClientLogin from './Client/ClientLogin';\nimport AdminLogin from './Admin/AdminLogin';\nimport ClientHistory from './Client/ClientHistory';\nimport ClientSettings from './Client/ClientSettings';\nimport ClientOrder from './Client/ClientOrder';\nimport Taxi from './Client/Taxi';\nimport { userIn } from \"../utils/API\";\nimport Loading from \"../utils/Loading\";\nimport Context from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRoutes = () => {\n  _s();\n\n  const location = useLocation();\n  const [authData, setAuthData] = useState({\n    'isLoading': true,\n    'loggedIn': false,\n    'userType': '',\n    'userId': ''\n  });\n  useEffect(() => {\n    userInChecker().then();\n  }, []);\n\n  const userInChecker = async () => {\n    await userIn().then(response => {\n      loadingDone();\n\n      if (response.data.user_in) {\n        loginStatusChanger({\n          'loggedIn': response.data.user_in,\n          'userType': response.data.model_name,\n          'userId': response.data.user.id\n        });\n      }\n    });\n  };\n\n  const loginStatusChanger = data => {\n    setAuthData({\n      'loggedIn': data.loggedIn,\n      'userType': data.userType,\n      'userId': data.userId\n    });\n  };\n\n  const loadingDone = () => {\n    setAuthData({ ...authData,\n      'isLoading': false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      authData\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [authData.isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }, this) : false, /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: appRoutes.signup,\n          exact: true,\n          component: Signup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: appRoutes.login,\n          exact: true,\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: appRoutes.signupClient,\n          exact: true,\n          component: ClientSignup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: appRoutes.signupDriver,\n          exact: true,\n          component: DriverSignup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: appRoutes.loginDriver,\n          exact: true,\n          component: DriverLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: appRoutes.loginClient,\n          exact: true,\n          component: ClientLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: appRoutes.loginAdmin,\n          exact: true,\n          component: AdminLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: appRoutes.client,\n          exact: true,\n          component: ClientOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: appRoutes.clientHistory,\n          exact: true,\n          component: ClientHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: appRoutes.clientSettings,\n          exact: true,\n          component: ClientSettings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: appRoutes.taxi,\n          exact: true,\n          component: Taxi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: appRoutes.driverPage,\n          exact: true,\n          component: DriverPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: appRoutes.driverProfile,\n          exact: true,\n          component: DriverProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AppRoutes, \"oxWud2vpDhus3vVUlb0gTTtfjNs=\", false, function () {\n  return [useLocation];\n});\n\n_c = AppRoutes;\nexport default AppRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRoutes\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/components/AppRoutes.js"],"names":["React","useEffect","useState","Route","useLocation","Switch","appRoutes","Header","Signup","Login","ClientSignup","DriverSignup","DriverLogin","DriverPage","DriverProfile","ClientLogin","AdminLogin","ClientHistory","ClientSettings","ClientOrder","Taxi","userIn","Loading","Context","AppRoutes","location","authData","setAuthData","userInChecker","then","response","loadingDone","data","user_in","loginStatusChanger","model_name","user","id","loggedIn","userType","userId","isLoading","signup","login","signupClient","signupDriver","loginDriver","loginClient","loginAdmin","client","clientHistory","clientSettings","taxi","driverPage","driverProfile"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { Route, useLocation, Switch } from 'react-router-dom';\r\nimport { appRoutes } from '../utils/configs'\r\nimport Header from './Header'\r\nimport Signup from './Signup'\r\nimport Login from './Login'\r\nimport ClientSignup from './Client/ClientSignup'\r\nimport DriverSignup from './Driver/DriverSignup'\r\nimport DriverLogin from './Driver/DriverLogin'\r\nimport DriverPage from './Driver/DriverPage'\r\nimport DriverProfile from './Driver/DriverProfile'\r\nimport ClientLogin from './Client/ClientLogin'\r\nimport AdminLogin from './Admin/AdminLogin'\r\nimport ClientHistory from './Client/ClientHistory'\r\nimport ClientSettings from './Client/ClientSettings'\r\nimport ClientOrder from './Client/ClientOrder'\r\nimport Taxi from './Client/Taxi'\r\nimport {userIn} from \"../utils/API\";\r\nimport Loading from \"../utils/Loading\";\r\nimport Context from \"./context\"\r\n\r\nconst AppRoutes = () => {\r\n    const location = useLocation();\r\n    \r\n    const [authData, setAuthData] = useState(\r\n      {\r\n          'isLoading': true,\r\n          'loggedIn': false,\r\n          'userType': '',\r\n          'userId': ''\r\n      })\r\n    \r\n    useEffect(() => {\r\n        userInChecker()\r\n          .then()\r\n    },[])\r\n    \r\n    const userInChecker = async () => {\r\n        await userIn()\r\n          .then(response => {\r\n            loadingDone()\r\n              if (response.data.user_in) {\r\n                  loginStatusChanger({'loggedIn': response.data.user_in,\r\n                      'userType': response.data.model_name,\r\n                      'userId': response.data.user.id} )\r\n              }\r\n          })\r\n    }\r\n    \r\n    const loginStatusChanger = (data) => {\r\n        setAuthData({\r\n            'loggedIn': data.loggedIn,\r\n            'userType': data.userType,\r\n            'userId': data.userId})\r\n    }\r\n    const loadingDone = () => {\r\n      setAuthData({\r\n        ...authData,\r\n        'isLoading': false\r\n      })\r\n    }\r\n    \r\n    return (\r\n      <Context.Provider value={{authData}}>\r\n        <div>\r\n          {authData.isLoading ? <Loading /> : false}\r\n          <Header />\r\n            <Switch >\r\n                <Route path={appRoutes.signup} exact component={Signup} />\r\n                <Route exact path={appRoutes.login} exact component={Login} />\r\n                <Route path={appRoutes.signupClient} exact component={ClientSignup} />\r\n                <Route path={appRoutes.signupDriver} exact component={DriverSignup} />\r\n                <Route path={appRoutes.loginDriver} exact component={DriverLogin} />\r\n                <Route path={appRoutes.loginClient} exact component={ClientLogin} />\r\n                <Route path={appRoutes.loginAdmin} exact component={AdminLogin} />\r\n                <Route path={appRoutes.client} exact component={ClientOrder} />\r\n                <Route path={appRoutes.clientHistory} exact component={ClientHistory} />\r\n                <Route path={appRoutes.clientSettings} exact component={ClientSettings} />\r\n                <Route path={appRoutes.taxi} exact component={Taxi} />\r\n                <Route exact path={appRoutes.driverPage} exact component={DriverPage} />\r\n                <Route path={appRoutes.driverProfile} exact component={DriverProfile} />\r\n            </Switch>\r\n        </div>\r\n      </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default AppRoutes"]},"metadata":{},"sourceType":"module"}
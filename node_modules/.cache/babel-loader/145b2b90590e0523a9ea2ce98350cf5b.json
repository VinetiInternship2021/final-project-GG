{"ast":null,"code":"var _jsxFileName = \"D:\\\\VinetiWorkSpace\\\\final-project-GG\\\\src\\\\components\\\\AppRoutes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { appRoutes } from '../utils/configs';\nimport Header from './Header';\nimport Signup from './Signup';\nimport Login from './Login';\nimport ClientSignup from './Client/ClientSignup';\nimport DriverSignup from './Driver/DriverSignup';\nimport DriverLogin from './Driver/DriverLogin';\nimport DriverPage from './Driver/DriverPage';\nimport DriverProfile from './Driver/DriverProfile';\nimport ClientLogin from './Client/ClientLogin';\nimport AdminLogin from './Admin/AdminLogin';\nimport ClientHistory from './Client/ClientHistory';\nimport ClientSettings from './Client/ClientSettings';\nimport ClientOrder from './Client/ClientOrder';\nimport Taxi from './Client/Taxi';\nimport { userIn } from '../utils/API';\nimport Loading from '../shared/Animations/Loading';\nimport Home from './Home';\nimport { ChangeActionLoading, ChangeActionLoggedIn } from '../redux/actions';\nimport '../styles/custom.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRoutes = props => {\n  _s();\n\n  const {\n    dispatch\n  } = props;\n\n  const loginStatusChanger = data => {\n    dispatch(ChangeActionLoggedIn(data));\n  };\n\n  const loadingDone = () => {\n    dispatch(ChangeActionLoading(false));\n  };\n\n  const userInChecker = async () => {\n    await userIn().then(response => {\n      loadingDone();\n\n      if (response.data.user_in) {\n        loginStatusChanger({\n          isLoading: false,\n          loggedIn: response.data.user_in,\n          userType: response.data.model_name,\n          userId: response.data.user.id\n        });\n      } else {\n        loginStatusChanger({\n          isLoading: false,\n          loggedIn: false,\n          userType: '',\n          userId: ''\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    userInChecker().then();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.appState.isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-md body\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.root,\n            exact: true,\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.signup,\n            exact: true,\n            component: Signup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.login,\n            exact: true,\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.signupClient,\n            exact: true,\n            component: ClientSignup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.signupDriver,\n            exact: true,\n            component: DriverSignup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.loginDriver,\n            exact: true,\n            component: DriverLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.loginClient,\n            exact: true,\n            component: ClientLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.loginAdmin,\n            exact: true,\n            component: AdminLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.client,\n            exact: true,\n            component: ClientOrder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.clientHistory,\n            exact: true,\n            component: ClientHistory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.clientSettings,\n            exact: true,\n            component: ClientSettings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.taxi,\n            exact: true,\n            component: Taxi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.driverPage,\n            exact: true,\n            component: DriverPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.driverProfile,\n            exact: true,\n            component: DriverProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppRoutes, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AppRoutes;\nAppRoutes.propTypes = {\n  appState: PropTypes.any.isRequired,\n  // dispatch: PropTypes.element.isRequired,\n  dispatch: PropTypes.func.isRequired\n};\nexport default AppRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRoutes\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/components/AppRoutes.js"],"names":["React","useEffect","Route","Switch","PropTypes","appRoutes","Header","Signup","Login","ClientSignup","DriverSignup","DriverLogin","DriverPage","DriverProfile","ClientLogin","AdminLogin","ClientHistory","ClientSettings","ClientOrder","Taxi","userIn","Loading","Home","ChangeActionLoading","ChangeActionLoggedIn","AppRoutes","props","dispatch","loginStatusChanger","data","loadingDone","userInChecker","then","response","user_in","isLoading","loggedIn","userType","model_name","userId","user","id","appState","root","signup","login","signupClient","signupDriver","loginDriver","loginClient","loginAdmin","client","clientHistory","clientSettings","taxi","driverPage","driverProfile","propTypes","any","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { appRoutes } from '../utils/configs';\nimport Header from './Header';\nimport Signup from './Signup';\nimport Login from './Login';\nimport ClientSignup from './Client/ClientSignup';\nimport DriverSignup from './Driver/DriverSignup';\nimport DriverLogin from './Driver/DriverLogin';\nimport DriverPage from './Driver/DriverPage';\nimport DriverProfile from './Driver/DriverProfile';\nimport ClientLogin from './Client/ClientLogin';\nimport AdminLogin from './Admin/AdminLogin';\nimport ClientHistory from './Client/ClientHistory';\nimport ClientSettings from './Client/ClientSettings';\nimport ClientOrder from './Client/ClientOrder';\nimport Taxi from './Client/Taxi';\nimport { userIn } from '../utils/API';\nimport Loading from '../shared/Animations/Loading';\nimport Home from './Home';\nimport {\n  ChangeActionLoading,\n  ChangeActionLoggedIn,\n} from '../redux/actions';\nimport '../styles/custom.scss';\n\nconst AppRoutes = (props) => {\n  const { dispatch } = props;\n\n  const loginStatusChanger = (data) => {\n    dispatch(ChangeActionLoggedIn(data));\n  };\n\n  const loadingDone = () => {\n    dispatch(ChangeActionLoading(false));\n  };\n\n  const userInChecker = async () => {\n    await userIn()\n      .then((response) => {\n        loadingDone();\n        if (response.data.user_in) {\n          loginStatusChanger({\n            isLoading: false,\n            loggedIn: response.data.user_in,\n            userType: response.data.model_name,\n            userId: response.data.user.id,\n          });\n        } else {\n          loginStatusChanger({\n            isLoading: false,\n            loggedIn: false,\n            userType: '',\n            userId: '',\n          });\n        }\n      });\n  };\n\n  useEffect(() => {\n    userInChecker()\n      .then();\n  }, []);\n\n  return (\n\n    <div>\n      {/* eslint-disable-next-line react/destructuring-assignment */}\n      {props.appState.isLoading ? <Loading />\n        : (\n          <div>\n            <div className=\"container-fluid\">\n              <Header />\n            </div>\n            <div className=\"container-md body\">\n              <Switch>\n                <Route path={appRoutes.root} exact component={Home} />\n                <Route path={appRoutes.signup} exact component={Signup} />\n                <Route path={appRoutes.login} exact component={Login} />\n                <Route path={appRoutes.signupClient} exact component={ClientSignup} />\n                <Route path={appRoutes.signupDriver} exact component={DriverSignup} />\n                <Route path={appRoutes.loginDriver} exact component={DriverLogin} />\n                <Route path={appRoutes.loginClient} exact component={ClientLogin} />\n                <Route path={appRoutes.loginAdmin} exact component={AdminLogin} />\n                <Route path={appRoutes.client} exact component={ClientOrder} />\n                <Route path={appRoutes.clientHistory} exact component={ClientHistory} />\n                <Route path={appRoutes.clientSettings} exact component={ClientSettings} />\n                <Route path={appRoutes.taxi} exact component={Taxi} />\n                <Route path={appRoutes.driverPage} exact component={DriverPage} />\n                <Route path={appRoutes.driverProfile} exact component={DriverProfile} />\n              </Switch>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n\nAppRoutes.propTypes = {\n  appState: PropTypes.any.isRequired,\n  // dispatch: PropTypes.element.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default AppRoutes;\n"]},"metadata":{},"sourceType":"module"}
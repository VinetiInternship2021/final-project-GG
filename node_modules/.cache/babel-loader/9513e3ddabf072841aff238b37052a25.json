{"ast":null,"code":"var _jsxFileName = \"D:\\\\VinetiWorkSpace\\\\final-project-GG\\\\src\\\\components\\\\Driver\\\\DriverLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { login } from '../../utils/API';\nimport { loginParams } from \"../../utils/configs\";\nimport { ChangeActionLoading, ChangeActionLoggedIn, mapStateToProps } from '../../redux/actions';\nimport { connect } from \"react-redux\";\nimport LoginForm from \"../LoginForm\"; // import ErrorMessages from \"../layouts/ErrorMessages\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DriverLogin = props => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = props.dispatch;\n  const state = props.appState;\n  const [fields, setFields] = useState({ ...loginParams,\n    model_name: 'Driver'\n  });\n  useEffect(() => {\n    if (state.loggedIn) {\n      history.push(`/${state.userType}/${state.userId}`);\n    }\n\n    return () => {\n      dispatch(ChangeActionLoggedIn(state));\n    };\n  }, []);\n\n  const onClick = event => {\n    Login(event).then();\n  };\n\n  const Login = async event => {\n    dispatch(ChangeActionLoading({\n      'isLoading': true\n    }));\n    const params = {\n      session: { ...fields,\n        remember_me: fields.remember_me === true ? '1' : '0'\n      }\n    };\n    await login(params).then(response => {\n      dispatch(ChangeActionLoggedIn({ ...state,\n        'isLoading': false,\n        'loggedIn': true,\n        'userType': response.data.model_name,\n        'userId': response.data.user.id\n      }));\n      history.push(`/${response.data.model_name}/${response.data.user.id}`);\n    }).catch(response => {\n      console.log('set');\n      setFields({ ...fields,\n        alert: response.message\n      });\n      dispatch(ChangeActionLoading(false));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      fields: fields,\n      setFields: setFields,\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(DriverLogin, \"up1KnnNQsZlcsK9E4l7YCibDfEs=\", false, function () {\n  return [useHistory];\n});\n\n_c = DriverLogin;\nexport default connect(mapStateToProps)(DriverLogin);\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverLogin\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/components/Driver/DriverLogin.js"],"names":["React","useState","useEffect","useHistory","login","loginParams","ChangeActionLoading","ChangeActionLoggedIn","mapStateToProps","connect","LoginForm","DriverLogin","props","history","dispatch","state","appState","fields","setFields","model_name","loggedIn","push","userType","userId","onClick","event","Login","then","params","session","remember_me","response","data","user","id","catch","console","log","alert","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAAQC,mBAAR,EACQC,oBADR,EAEQC,eAFR,QAE8B,qBAF9B;AAGA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB,C,CACA;;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAMW,QAAQ,GAAGF,KAAK,CAACE,QAAvB;AACA,QAAMC,KAAK,GAAGH,KAAK,CAACI,QAApB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EACjC,GAAGI,WAD8B;AAEjCc,IAAAA,UAAU,EAAE;AAFqB,GAAD,CAApC;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,KAAK,CAACK,QAAV,EAAoB;AAClBP,MAAAA,OAAO,CAACQ,IAAR,CAAc,IAAGN,KAAK,CAACO,QAAS,IAAGP,KAAK,CAACQ,MAAO,EAAhD;AACD;;AACD,WAAQ,MAAI;AACVT,MAAAA,QAAQ,CAACP,oBAAoB,CAACQ,KAAD,CAArB,CAAR;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;;AASE,QAAMS,OAAO,GAAIC,KAAD,IAAW;AAEzBC,IAAAA,KAAK,CAACD,KAAD,CAAL,CACGE,IADH;AAED,GAJD;;AAMA,QAAMD,KAAK,GAAG,MAAOD,KAAP,IAAiB;AAC7BX,IAAAA,QAAQ,CAACR,mBAAmB,CAAC;AAAC,mBAAa;AAAd,KAAD,CAApB,CAAR;AACA,UAAMsB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE,EACP,GAAGZ,MADI;AAEPa,QAAAA,WAAW,EAAEb,MAAM,CAACa,WAAP,KAAuB,IAAvB,GAA8B,GAA9B,GAAmC;AAFzC;AADI,KAAf;AAMA,UAAM1B,KAAK,CAACwB,MAAD,CAAL,CACHD,IADG,CACEI,QAAQ,IAAI;AAChBjB,MAAAA,QAAQ,CAACP,oBAAoB,CAAC,EAC5B,GAAGQ,KADyB;AAE5B,qBAAa,KAFe;AAG5B,oBAAY,IAHgB;AAI5B,oBAAYgB,QAAQ,CAACC,IAAT,CAAcb,UAJE;AAK5B,kBAAUY,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBC;AALD,OAAD,CAArB,CAAR;AAOArB,MAAAA,OAAO,CAACQ,IAAR,CAAc,IAAGU,QAAQ,CAACC,IAAT,CAAcb,UAAW,IAAGY,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBC,EAAG,EAAnE;AACD,KAVG,EAWHC,KAXG,CAWGJ,QAAQ,IAAI;AACjBK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAnB,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaqB,QAAAA,KAAK,EAAEP,QAAQ,CAACQ;AAA7B,OAAD,CAAT;AACAzB,MAAAA,QAAQ,CAACR,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACD,KAfG,CAAN;AAgBD,GAxBD;;AA0BA,sBACI;AAAA,2BAEE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEW,MAAnB;AAA2B,MAAA,SAAS,EAAEC,SAAtC;AAAiD,MAAA,OAAO,EAAEM;AAA1D;AAAA;AAAA;AAAA;AAAA;AAFF,mBADJ;AAMH,CAxDD;;GAAMb,W;UACYR,U;;;KADZQ,W;AA0DN,eAAeF,OAAO,CAACD,eAAD,CAAP,CAAyBG,WAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { login } from '../../utils/API';\r\nimport { loginParams } from \"../../utils/configs\";\r\nimport {ChangeActionLoading,\r\n        ChangeActionLoggedIn,\r\n        mapStateToProps} from '../../redux/actions';\r\nimport {connect} from \"react-redux\";\r\nimport LoginForm from \"../LoginForm\";\r\n// import ErrorMessages from \"../layouts/ErrorMessages\";\r\n\r\nconst DriverLogin = (props) => {\r\n  const history = useHistory()\r\n  const dispatch = props.dispatch\r\n  const state = props.appState\r\n  const [fields, setFields] = useState({\r\n      ...loginParams,\r\n      model_name: 'Driver'\r\n  })\r\n  \r\n  useEffect(() => {\r\n    if (state.loggedIn) {\r\n      history.push(`/${state.userType}/${state.userId}`)\r\n    }\r\n    return (()=>{\r\n      dispatch(ChangeActionLoggedIn(state))\r\n    })\r\n  }, [])\r\n\r\n    const onClick = (event) => {\r\n    \r\n      Login(event)\r\n        .then()\r\n    }\r\n    \r\n    const Login = async (event) => {\r\n      dispatch(ChangeActionLoading({'isLoading': true}))\r\n      const params = {\r\n        session: {\r\n          ...fields,\r\n          remember_me: fields.remember_me === true ? '1': '0'\r\n        }\r\n      }\r\n      await login(params)\r\n        .then(response => {\r\n          dispatch(ChangeActionLoggedIn({\r\n            ...state,\r\n            'isLoading': false,\r\n            'loggedIn': true,\r\n            'userType': response.data.model_name,\r\n            'userId': response.data.user.id\r\n          }))\r\n          history.push(`/${response.data.model_name}/${response.data.user.id}`)\r\n        })\r\n        .catch(response => {\r\n          console.log('set')\r\n          setFields({ ...fields, alert: response.message })\r\n          dispatch(ChangeActionLoading(false))\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n          {/*<ErrorMessages Errors={}/>*/}\r\n          <LoginForm fields={fields} setFields={setFields} onClick={onClick} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(DriverLogin)\r\n"]},"metadata":{},"sourceType":"module"}
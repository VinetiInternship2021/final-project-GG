{"ast":null,"code":"import React from 'react';\nimport { login } from \"./API\";\nimport { ChangeActionLoading, ChangeActionLoggedIn } from \"../redux/actions\";\n\nconst onClick = (event, fields, setFields, dispatch) => {\n  event.preventDefault();\n  Login(fields, setFields, dispatch).then();\n};\n\nconst Login = async (fields, setFields, dispatch) => {\n  const params = {\n    session: { ...fields,\n      remember_me: fields.remember_me === true ? '1' : '0'\n    }\n  };\n  await login(params).then(response => {\n    dispatch(ChangeActionLoggedIn({ ...state,\n      'isLoading': false,\n      'loggedIn': true,\n      'userType': response.data.model_name,\n      'userId': response.data.user.id,\n      'alert': ''\n    }));\n    history.push(`/${response.data.model_name}/${response.data.user.id}`);\n  }).catch(response => {\n    props.dispatch(ChangeActionLoading(false));\n    props.setFields({ ...props.fields,\n      alert: response.message\n    });\n  });\n};\n\n_c = Login;\nexport default onClick;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/utils/LoginOnClick.js"],"names":["React","login","ChangeActionLoading","ChangeActionLoggedIn","onClick","event","fields","setFields","dispatch","preventDefault","Login","then","params","session","remember_me","response","state","data","model_name","user","id","history","push","catch","props","alert","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,OAApB;AACA,SAAQC,mBAAR,EAA6BC,oBAA7B,QAAwD,kBAAxD;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,QAA3B,KAAwC;AACtDH,EAAAA,KAAK,CAACI,cAAN;AACAC,EAAAA,KAAK,CAACJ,MAAD,EAASC,SAAT,EAAoBC,QAApB,CAAL,CACGG,IADH;AAED,CAJD;;AAMA,MAAMD,KAAK,GAAG,OAAOJ,MAAP,EAAeC,SAAf,EAA0BC,QAA1B,KAAuC;AACnD,QAAMI,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE,EACP,GAAGP,MADI;AAEPQ,MAAAA,WAAW,EAAER,MAAM,CAACQ,WAAP,KAAuB,IAAvB,GAA8B,GAA9B,GAAmC;AAFzC;AADI,GAAf;AAMA,QAAMb,KAAK,CAACW,MAAD,CAAL,CACHD,IADG,CACEI,QAAQ,IAAI;AAChBP,IAAAA,QAAQ,CAACL,oBAAoB,CAAC,EAC5B,GAAGa,KADyB;AAE5B,mBAAa,KAFe;AAG5B,kBAAY,IAHgB;AAI5B,kBAAYD,QAAQ,CAACE,IAAT,CAAcC,UAJE;AAK5B,gBAAUH,QAAQ,CAACE,IAAT,CAAcE,IAAd,CAAmBC,EALD;AAM5B,eAAS;AANmB,KAAD,CAArB,CAAR;AAQAC,IAAAA,OAAO,CAACC,IAAR,CAAc,IAAGP,QAAQ,CAACE,IAAT,CAAcC,UAAW,IAAGH,QAAQ,CAACE,IAAT,CAAcE,IAAd,CAAmBC,EAAG,EAAnE;AACD,GAXG,EAYHG,KAZG,CAYGR,QAAQ,IAAI;AACjBS,IAAAA,KAAK,CAAChB,QAAN,CAAeN,mBAAmB,CAAC,KAAD,CAAlC;AACAsB,IAAAA,KAAK,CAACjB,SAAN,CAAgB,EAAC,GAAGiB,KAAK,CAAClB,MAAV;AAAkBmB,MAAAA,KAAK,EAAEV,QAAQ,CAACW;AAAlC,KAAhB;AACD,GAfG,CAAN;AAgBD,CAvBD;;KAAMhB,K;AAyBN,eAAeN,OAAf","sourcesContent":["import React from 'react'\r\nimport {login} from \"./API\";\r\nimport {ChangeActionLoading, ChangeActionLoggedIn} from \"../redux/actions\";\r\n\r\nconst onClick = (event, fields, setFields, dispatch) => {\r\n  event.preventDefault();\r\n  Login(fields, setFields, dispatch)\r\n    .then()\r\n}\r\n\r\nconst Login = async (fields, setFields, dispatch) => {\r\n  const params = {\r\n    session: {\r\n      ...fields,\r\n      remember_me: fields.remember_me === true ? '1': '0'\r\n    }\r\n  }\r\n  await login(params)\r\n    .then(response => {\r\n      dispatch(ChangeActionLoggedIn({\r\n        ...state,\r\n        'isLoading': false,\r\n        'loggedIn': true,\r\n        'userType': response.data.model_name,\r\n        'userId': response.data.user.id,\r\n        'alert': ''\r\n      }))\r\n      history.push(`/${response.data.model_name}/${response.data.user.id}`)\r\n    })\r\n    .catch(response => {\r\n      props.dispatch(ChangeActionLoading(false))\r\n      props.setFields({...props.fields, alert: response.message})\r\n    })\r\n}\r\n\r\nexport default onClick"]},"metadata":{},"sourceType":"module"}
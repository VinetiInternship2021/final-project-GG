{"ast":null,"code":"import { modelShow } from '../utils/API';\n\nconst setUserData = ({\n  response,\n  state,\n  setState,\n  modelName\n}) => {\n  const {\n    data\n  } = response;\n\n  if (data.exist) {\n    setState({ ...state,\n      exist: data.exist,\n      isLoading: false,\n      user: {\n        phone_number: data.user.phone_number,\n        first_name: data.user.first_name,\n        last_name: data.user.first_name,\n        email: data.user.email\n      }\n    });\n\n    if (modelName === 'drivers') {\n      setState({ ...state,\n        user: {\n          car_manufacturer: data.user.car_manufacturer,\n          car_model: data.user.car_model,\n          car_level: data.user.car_level,\n          driver_license_image_id: data.user.driver_license_image_id,\n          is_active: data.user.is_active,\n          is_verified_by_admin: data.user.is_verified_by_admin,\n          car_registration_number: data.user.car_registration_number\n        }\n      });\n    }\n  } else {\n    setState({ ...state,\n      exist: false\n    });\n  }\n};\n\nconst getUserData = async ({\n  state,\n  setState,\n  modelName\n}) => {\n  const params = {\n    model: modelName,\n    userId: state.userId\n  };\n  await modelShow(params).then(response => setUserData({\n    response,\n    state,\n    setState,\n    modelName\n  }));\n};\n\nexport default getUserData;","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/helpers/ProfilePageHelper.js"],"names":["modelShow","setUserData","response","state","setState","modelName","data","exist","isLoading","user","phone_number","first_name","last_name","email","car_manufacturer","car_model","car_level","driver_license_image_id","is_active","is_verified_by_admin","car_registration_number","getUserData","params","model","userId","then"],"mappings":"AAAA,SAASA,SAAT,QAA0B,cAA1B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,QADmB;AACTC,EAAAA,KADS;AACFC,EAAAA,QADE;AACQC,EAAAA;AADR,CAAD,KAEd;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,QAAjB;;AACA,MAAII,IAAI,CAACC,KAAT,EAAgB;AACdH,IAAAA,QAAQ,CACN,EACE,GAAGD,KADL;AAEEI,MAAAA,KAAK,EAAED,IAAI,CAACC,KAFd;AAGEC,MAAAA,SAAS,EAAE,KAHb;AAIEC,MAAAA,IAAI,EAAE;AACJC,QAAAA,YAAY,EAAEJ,IAAI,CAACG,IAAL,CAAUC,YADpB;AAEJC,QAAAA,UAAU,EAAEL,IAAI,CAACG,IAAL,CAAUE,UAFlB;AAGJC,QAAAA,SAAS,EAAEN,IAAI,CAACG,IAAL,CAAUE,UAHjB;AAIJE,QAAAA,KAAK,EAAEP,IAAI,CAACG,IAAL,CAAUI;AAJb;AAJR,KADM,CAAR;;AAaA,QAAIR,SAAS,KAAK,SAAlB,EAA6B;AAC3BD,MAAAA,QAAQ,CACN,EACE,GAAGD,KADL;AAEEM,QAAAA,IAAI,EAAE;AACJK,UAAAA,gBAAgB,EAAER,IAAI,CAACG,IAAL,CAAUK,gBADxB;AAEJC,UAAAA,SAAS,EAAET,IAAI,CAACG,IAAL,CAAUM,SAFjB;AAGJC,UAAAA,SAAS,EAAEV,IAAI,CAACG,IAAL,CAAUO,SAHjB;AAIJC,UAAAA,uBAAuB,EAAEX,IAAI,CAACG,IAAL,CAAUQ,uBAJ/B;AAKJC,UAAAA,SAAS,EAAEZ,IAAI,CAACG,IAAL,CAAUS,SALjB;AAMJC,UAAAA,oBAAoB,EAAEb,IAAI,CAACG,IAAL,CAAUU,oBAN5B;AAOJC,UAAAA,uBAAuB,EAAEd,IAAI,CAACG,IAAL,CAAUW;AAP/B;AAFR,OADM,CAAR;AAcD;AACF,GA9BD,MA8BO;AACLhB,IAAAA,QAAQ,CACN,EACE,GAAGD,KADL;AAEEI,MAAAA,KAAK,EAAE;AAFT,KADM,CAAR;AAMD;AACF,CA1CD;;AA4CA,MAAMc,WAAW,GAAG,OAAO;AAAElB,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAP,KAA0C;AAC5D,QAAMiB,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAElB,SADM;AAEbmB,IAAAA,MAAM,EAAErB,KAAK,CAACqB;AAFD,GAAf;AAIA,QAAMxB,SAAS,CAACsB,MAAD,CAAT,CACHG,IADG,CACGvB,QAAD,IAAcD,WAAW,CAAC;AAC9BC,IAAAA,QAD8B;AACpBC,IAAAA,KADoB;AACbC,IAAAA,QADa;AACHC,IAAAA;AADG,GAAD,CAD3B,CAAN;AAID,CATD;;AAWA,eAAegB,WAAf","sourcesContent":["import { modelShow } from '../utils/API';\n\nconst setUserData = ({\n  response, state, setState, modelName,\n}) => {\n  const { data } = response;\n  if (data.exist) {\n    setState(\n      {\n        ...state,\n        exist: data.exist,\n        isLoading: false,\n        user: {\n          phone_number: data.user.phone_number,\n          first_name: data.user.first_name,\n          last_name: data.user.first_name,\n          email: data.user.email,\n        },\n      },\n    );\n    if (modelName === 'drivers') {\n      setState(\n        {\n          ...state,\n          user: {\n            car_manufacturer: data.user.car_manufacturer,\n            car_model: data.user.car_model,\n            car_level: data.user.car_level,\n            driver_license_image_id: data.user.driver_license_image_id,\n            is_active: data.user.is_active,\n            is_verified_by_admin: data.user.is_verified_by_admin,\n            car_registration_number: data.user.car_registration_number,\n          },\n        },\n      );\n    }\n  } else {\n    setState(\n      {\n        ...state,\n        exist: false,\n      },\n    );\n  }\n};\n\nconst getUserData = async ({ state, setState, modelName }) => {\n  const params = {\n    model: modelName,\n    userId: state.userId,\n  };\n  await modelShow(params)\n    .then((response) => setUserData({\n      response, state, setState, modelName,\n    }));\n};\n\nexport default getUserData;\n"]},"metadata":{},"sourceType":"module"}
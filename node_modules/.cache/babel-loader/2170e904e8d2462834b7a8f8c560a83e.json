{"ast":null,"code":"var _jsxFileName = \"D:\\\\VinetiWorkSpace\\\\final-project-GG\\\\src\\\\components\\\\AppRoutes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route, useLocation, Switch } from 'react-router-dom';\nimport { appRoutes } from '../utils/configs';\nimport Header from './Header';\nimport Signup from './Signup';\nimport Login from './Login';\nimport ClientSignup from './Client/ClientSignup';\nimport DriverSignup from './Driver/DriverSignup';\nimport DriverLogin from './Driver/DriverLogin';\nimport DriverPage from './Driver/DriverPage';\nimport DriverProfile from './Driver/DriverProfile';\nimport ClientLogin from './Client/ClientLogin';\nimport AdminLogin from './Admin/AdminLogin';\nimport ClientHistory from './Client/ClientHistory';\nimport ClientSettings from './Client/ClientSettings';\nimport ClientOrder from './Client/ClientOrder';\nimport Taxi from './Client/Taxi';\nimport { userIn } from \"../utils/API\";\nimport Loading from \"../utils/Loading\";\nimport Context from \"./context\";\nimport { createStore } from 'redux';\nimport { connect, Provider } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACTION_CHANGE_LOGGED_IN = 'ACTION_CHANGE_LOGGED_IN';\nconst actionChangeLoggedIn = {\n  type: ACTION_CHANGE_LOGGED_IN,\n  payload: null\n};\nconst initState = {\n  example: 'Artyom'\n};\n\nconst rootReducer = (state = initState, action) => {\n  return state;\n};\n\nconst store = createStore(rootReducer);\nconsole.log(store.getState());\n\nconst AppRoutes = () => {\n  _s();\n\n  const location = useLocation();\n  const [authData, setAuthData] = useState({\n    'isLoading': true,\n    'loggedIn': false,\n    'userType': '',\n    'userId': ''\n  });\n  useEffect(() => {\n    userInChecker().then();\n  }, []);\n\n  const userInChecker = async () => {\n    await userIn().then(response => {\n      loadingDone();\n\n      if (response.data.user_in) {\n        localStorage.setItem('loggedIn', 'true');\n        loginStatusChanger({\n          'loggedIn': response.data.user_in,\n          'userType': response.data.model_name,\n          'userId': response.data.user.id\n        });\n      } else {\n        localStorage.setItem('loggedIn', 'false');\n      }\n    });\n  };\n\n  const loginStatusChanger = data => {\n    setAuthData({ ...authData,\n      'isLoading': false,\n      'loggedIn': data.loggedIn,\n      'userType': data.userType,\n      'userId': data.userId\n    });\n  };\n\n  const loadingDone = () => {\n    setAuthData({ ...authData,\n      'isLoading': false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        authData\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [authData.isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.signup,\n            exact: true,\n            component: Signup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.login,\n            exact: true,\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.signupClient,\n            exact: true,\n            component: ClientSignup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.signupDriver,\n            exact: true,\n            component: DriverSignup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.loginDriver,\n            exact: true,\n            component: DriverLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.loginClient,\n            exact: true,\n            component: ClientLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.loginAdmin,\n            exact: true,\n            component: AdminLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.client,\n            exact: true,\n            component: ClientOrder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.clientHistory,\n            exact: true,\n            component: ClientHistory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.clientSettings,\n            exact: true,\n            component: ClientSettings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.taxi,\n            exact: true,\n            component: Taxi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.driverPage,\n            exact: true,\n            component: DriverPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: appRoutes.driverProfile,\n            exact: true,\n            component: DriverProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AppRoutes, \"oxWud2vpDhus3vVUlb0gTTtfjNs=\", false, function () {\n  return [useLocation];\n});\n\n_c = AppRoutes;\nexport default AppRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRoutes\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/components/AppRoutes.js"],"names":["React","useEffect","useState","Route","useLocation","Switch","appRoutes","Header","Signup","Login","ClientSignup","DriverSignup","DriverLogin","DriverPage","DriverProfile","ClientLogin","AdminLogin","ClientHistory","ClientSettings","ClientOrder","Taxi","userIn","Loading","Context","createStore","connect","Provider","ACTION_CHANGE_LOGGED_IN","actionChangeLoggedIn","type","payload","initState","example","rootReducer","state","action","store","console","log","getState","AppRoutes","location","authData","setAuthData","userInChecker","then","response","loadingDone","data","user_in","localStorage","setItem","loginStatusChanger","model_name","user","id","loggedIn","userType","userId","isLoading","signup","login","signupClient","signupDriver","loginDriver","loginClient","loginAdmin","client","clientHistory","clientSettings","taxi","driverPage","driverProfile"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { Route, useLocation, Switch } from 'react-router-dom';\r\nimport { appRoutes } from '../utils/configs'\r\nimport Header from './Header'\r\nimport Signup from './Signup'\r\nimport Login from './Login'\r\nimport ClientSignup from './Client/ClientSignup'\r\nimport DriverSignup from './Driver/DriverSignup'\r\nimport DriverLogin from './Driver/DriverLogin'\r\nimport DriverPage from './Driver/DriverPage'\r\nimport DriverProfile from './Driver/DriverProfile'\r\nimport ClientLogin from './Client/ClientLogin'\r\nimport AdminLogin from './Admin/AdminLogin'\r\nimport ClientHistory from './Client/ClientHistory'\r\nimport ClientSettings from './Client/ClientSettings'\r\nimport ClientOrder from './Client/ClientOrder'\r\nimport Taxi from './Client/Taxi'\r\nimport {userIn} from \"../utils/API\";\r\nimport Loading from \"../utils/Loading\";\r\nimport Context from \"./context\"\r\nimport { createStore } from 'redux'\r\nimport { connect, Provider } from 'react-redux'\r\n\r\nconst ACTION_CHANGE_LOGGED_IN = 'ACTION_CHANGE_LOGGED_IN'\r\n\r\nconst actionChangeLoggedIn = {\r\n  type: ACTION_CHANGE_LOGGED_IN,\r\n  payload: null\r\n}\r\n\r\nconst initState = {\r\n  example: 'Artyom'\r\n}\r\nconst rootReducer = (state = initState, action) => {\r\n  return state\r\n}\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nconsole.log(store.getState())\r\n\r\nconst AppRoutes = () => {\r\n    const location = useLocation();\r\n    \r\n    const [authData, setAuthData] = useState(\r\n      {\r\n          'isLoading': true,\r\n          'loggedIn': false,\r\n          'userType': '',\r\n          'userId': ''\r\n      })\r\n    \r\n    useEffect(() => {\r\n        userInChecker()\r\n          .then()\r\n    },[])\r\n    \r\n    const userInChecker = async () => {\r\n        await userIn()\r\n          .then(response => {\r\n            loadingDone()\r\n            if (response.data.user_in) {\r\n              localStorage.setItem('loggedIn', 'true')\r\n              loginStatusChanger({'loggedIn': response.data.user_in,\r\n                  'userType': response.data.model_name,\r\n                  'userId': response.data.user.id} )\r\n            }\r\n            else {\r\n              localStorage.setItem('loggedIn', 'false')\r\n            }\r\n          })\r\n    }\r\n    \r\n    const loginStatusChanger = (data) => {\r\n        setAuthData({\r\n          ...authData,\r\n          'isLoading': false,\r\n          'loggedIn': data.loggedIn,\r\n          'userType': data.userType,\r\n          'userId': data.userId})\r\n    }\r\n    const loadingDone = () => {\r\n      setAuthData({\r\n      ...authData,\r\n      'isLoading': false\r\n      })\r\n    }\r\n    \r\n    return (\r\n      <Provider store={store}>\r\n      <Context.Provider value={{authData}}>\r\n        <div>\r\n          {authData.isLoading ? <Loading /> : <Header />}\r\n            <Switch >\r\n                <Route path={appRoutes.signup} exact component={Signup} />\r\n                <Route path={appRoutes.login} exact component={Login} />\r\n                <Route path={appRoutes.signupClient} exact component={ClientSignup} />\r\n                <Route path={appRoutes.signupDriver} exact component={DriverSignup} />\r\n                <Route path={appRoutes.loginDriver} exact component={DriverLogin} />\r\n                <Route path={appRoutes.loginClient} exact component={ClientLogin} />\r\n                <Route path={appRoutes.loginAdmin} exact component={AdminLogin} />\r\n                <Route path={appRoutes.client} exact component={ClientOrder} />\r\n                <Route path={appRoutes.clientHistory} exact component={ClientHistory} />\r\n                <Route path={appRoutes.clientSettings} exact component={ClientSettings} />\r\n                <Route path={appRoutes.taxi} exact component={Taxi} />\r\n                <Route path={appRoutes.driverPage} exact component={DriverPage} />\r\n                <Route path={appRoutes.driverProfile} exact component={DriverProfile} />\r\n            </Switch>\r\n        </div>\r\n      </Context.Provider>\r\n      </Provider>\r\n    )\r\n}\r\n\r\nexport default AppRoutes"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createStore } from 'redux';\nimport { ACTION_CHANGE_ALERT, ACTION_CHANGE_LOADING, ACTION_CHANGE_LOGGED_IN } from './actionTypes';\nconst initState = {\n  isLoading: true,\n  loggedIn: false,\n  userType: '',\n  userId: '',\n  alert: ''\n};\n\nconst rootReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ACTION_CHANGE_LOGGED_IN:\n      return { ...state,\n        isLoading: action.payload.isLoading,\n        loggedIn: action.payload.loggedIn,\n        userType: action.payload.userType,\n        userId: action.payload.userId,\n        alert: ''\n      };\n\n    case ACTION_CHANGE_LOADING:\n      return { ...state,\n        isLoading: action.payload.isLoading\n      };\n\n    case ACTION_CHANGE_ALERT:\n      return { ...state,\n        alert: action.payload.alert\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default createStore(rootReducer);","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/redux/store.js"],"names":["createStore","ACTION_CHANGE_ALERT","ACTION_CHANGE_LOADING","ACTION_CHANGE_LOGGED_IN","initState","isLoading","loggedIn","userType","userId","alert","rootReducer","state","action","type","payload"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SACEC,mBADF,EACuBC,qBADvB,EAEEC,uBAFF,QAGO,eAHP;AAKA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAE,IADK;AAEhBC,EAAAA,QAAQ,EAAE,KAFM;AAGhBC,EAAAA,QAAQ,EAAE,EAHM;AAIhBC,EAAAA,MAAM,EAAE,EAJQ;AAKhBC,EAAAA,KAAK,EAAE;AALS,CAAlB;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,SAAT,EAAoBQ,MAApB,KAA+B;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,uBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELN,QAAAA,SAAS,EAAEO,MAAM,CAACE,OAAP,CAAeT,SAFrB;AAGLC,QAAAA,QAAQ,EAAEM,MAAM,CAACE,OAAP,CAAeR,QAHpB;AAILC,QAAAA,QAAQ,EAAEK,MAAM,CAACE,OAAP,CAAeP,QAJpB;AAKLC,QAAAA,MAAM,EAAEI,MAAM,CAACE,OAAP,CAAeN,MALlB;AAMLC,QAAAA,KAAK,EAAE;AANF,OAAP;;AAQF,SAAKP,qBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELN,QAAAA,SAAS,EAAEO,MAAM,CAACE,OAAP,CAAeT;AAFrB,OAAP;;AAIF,SAAKJ,mBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAFjB,OAAP;;AAIF;AACE,aAAOE,KAAP;AArBJ;AAuBD,CAxBD;;AAyBA,eAAeX,WAAW,CAACU,WAAD,CAA1B","sourcesContent":["import { createStore } from 'redux';\nimport {\n  ACTION_CHANGE_ALERT, ACTION_CHANGE_LOADING,\n  ACTION_CHANGE_LOGGED_IN,\n} from './actionTypes';\n\nconst initState = {\n  isLoading: true,\n  loggedIn: false,\n  userType: '',\n  userId: '',\n  alert: '',\n};\n\nconst rootReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ACTION_CHANGE_LOGGED_IN:\n      return {\n        ...state,\n        isLoading: action.payload.isLoading,\n        loggedIn: action.payload.loggedIn,\n        userType: action.payload.userType,\n        userId: action.payload.userId,\n        alert: '',\n      };\n    case ACTION_CHANGE_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload.isLoading,\n      };\n    case ACTION_CHANGE_ALERT:\n      return {\n        ...state,\n        alert: action.payload.alert,\n      };\n    default:\n      return state;\n  }\n};\nexport default createStore(rootReducer);\n"]},"metadata":{},"sourceType":"module"}
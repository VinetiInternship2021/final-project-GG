{"ast":null,"code":"var _jsxFileName = \"D:\\\\VinetiWorkSpace\\\\final-project-GG\\\\src\\\\components\\\\Driver\\\\DriverLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapStateToProps } from '../../redux/actions';\nimport { loginParams } from '../../utils/configs';\nimport LoginOnClick from '../../utils/LoginOnClick';\nimport LoginForm from '../LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DriverLogin = props => {\n  _s();\n\n  const history = useHistory();\n  const {\n    appState,\n    dispatch\n  } = props;\n  const state = appState;\n  const [fields, setFields] = useState({ ...loginParams,\n    model_name: 'Driver'\n  });\n  useEffect(() => {\n    if (state.loggedIn) {\n      history.push(`/${state.userType}/${state.userId}`);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      fields: fields,\n      header: \"Driver Login\",\n      setFields: setFields,\n      onClick: event => LoginOnClick(event, fields, setFields, state, dispatch, history)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DriverLogin, \"23BWziqmPzcdOsQroyKCncSAZVc=\", false, function () {\n  return [useHistory];\n});\n\n_c = DriverLogin;\nexport default connect(mapStateToProps)(DriverLogin);\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverLogin\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/components/Driver/DriverLogin.js"],"names":["React","useEffect","useState","useHistory","connect","mapStateToProps","loginParams","LoginOnClick","LoginForm","DriverLogin","props","history","appState","dispatch","state","fields","setFields","model_name","loggedIn","push","userType","userId","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAM;AAAES,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,KAA/B;AACA,QAAMI,KAAK,GAAGF,QAAd;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EACnC,GAAGI,WADgC;AAEnCW,IAAAA,UAAU,EAAE;AAFuB,GAAD,CAApC;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,KAAK,CAACI,QAAV,EAAoB;AAClBP,MAAAA,OAAO,CAACQ,IAAR,CAAc,IAAGL,KAAK,CAACM,QAAS,IAAGN,KAAK,CAACO,MAAO,EAAhD;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,MAAM,EAAEN,MADV;AAEE,MAAA,MAAM,EAAC,cAFT;AAGE,MAAA,SAAS,EAAEC,SAHb;AAIE,MAAA,OAAO,EAAGM,KAAD,IAAWf,YAAY,CAACe,KAAD,EAAQP,MAAR,EAAgBC,SAAhB,EAA2BF,KAA3B,EAAkCD,QAAlC,EAA4CF,OAA5C;AAJlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAzBD;;GAAMF,W;UACYN,U;;;KADZM,W;AA2BN,eAAeL,OAAO,CAACC,eAAD,CAAP,CAAyBI,WAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { mapStateToProps } from '../../redux/actions';\nimport { loginParams } from '../../utils/configs';\nimport LoginOnClick from '../../utils/LoginOnClick';\nimport LoginForm from '../LoginForm';\n\nconst DriverLogin = (props) => {\n  const history = useHistory();\n  const { appState, dispatch } = props;\n  const state = appState;\n  const [fields, setFields] = useState({\n    ...loginParams,\n    model_name: 'Driver',\n  });\n\n  useEffect(() => {\n    if (state.loggedIn) {\n      history.push(`/${state.userType}/${state.userId}`);\n    }\n  }, []);\n\n  return (\n    <div>\n      <LoginForm\n        fields={fields}\n        header=\"Driver Login\"\n        setFields={setFields}\n        onClick={(event) => LoginOnClick(event, fields, setFields, state, dispatch, history)}\n      />\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(DriverLogin);\n"]},"metadata":{},"sourceType":"module"}
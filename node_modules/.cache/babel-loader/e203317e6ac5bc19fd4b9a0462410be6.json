{"ast":null,"code":"import { modelShow } from '../utils/API';\n\nconst setUserData = ({\n  response,\n  state,\n  setState\n}) => {\n  const {\n    data\n  } = response;\n\n  if (data.exist) {\n    setState({ ...state,\n      exist: data.exist,\n      isLoading: false,\n      user: {\n        phone_number: data.user.phone_number,\n        first_name: data.user.first_name,\n        last_name: data.user.first_name,\n        email: data.user.email\n      }\n    });\n  } else {\n    setState({ ...state,\n      exist: false\n    });\n  }\n};\n\nconst getUserData = async ({\n  state,\n  setState,\n  modelName\n}) => {\n  const params = {\n    model: modelName,\n    userId: state.userId\n  };\n  await modelShow(params).then(response => setUserData({\n    response,\n    state,\n    setState\n  }));\n};\n\nexport default getUserData;","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/helpers/ProfilePageHelper.js"],"names":["modelShow","setUserData","response","state","setState","data","exist","isLoading","user","phone_number","first_name","last_name","email","getUserData","modelName","params","model","userId","then"],"mappings":"AAAA,SAASA,SAAT,QAA0B,cAA1B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAD,KAAmC;AACrD,QAAM;AAAEC,IAAAA;AAAF,MAAWH,QAAjB;;AACA,MAAIG,IAAI,CAACC,KAAT,EAAgB;AACdF,IAAAA,QAAQ,CACN,EACE,GAAGD,KADL;AAEEG,MAAAA,KAAK,EAAED,IAAI,CAACC,KAFd;AAGEC,MAAAA,SAAS,EAAE,KAHb;AAIEC,MAAAA,IAAI,EAAE;AACJC,QAAAA,YAAY,EAAEJ,IAAI,CAACG,IAAL,CAAUC,YADpB;AAEJC,QAAAA,UAAU,EAAEL,IAAI,CAACG,IAAL,CAAUE,UAFlB;AAGJC,QAAAA,SAAS,EAAEN,IAAI,CAACG,IAAL,CAAUE,UAHjB;AAIJE,QAAAA,KAAK,EAAEP,IAAI,CAACG,IAAL,CAAUI;AAJb;AAJR,KADM,CAAR;AAaD,GAdD,MAcO;AACLR,IAAAA,QAAQ,CACN,EACE,GAAGD,KADL;AAEEG,MAAAA,KAAK,EAAE;AAFT,KADM,CAAR;AAMD;AACF,CAxBD;;AA0BA,MAAMO,WAAW,GAAG,OAAO;AAAEV,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBU,EAAAA;AAAnB,CAAP,KAA0C;AAC5D,QAAMC,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAEF,SADM;AAEbG,IAAAA,MAAM,EAAEd,KAAK,CAACc;AAFD,GAAf;AAIA,QAAMjB,SAAS,CAACe,MAAD,CAAT,CACHG,IADG,CACGhB,QAAD,IAAcD,WAAW,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAAD,CAD3B,CAAN;AAED,CAPD;;AASA,eAAeS,WAAf","sourcesContent":["import { modelShow } from '../utils/API';\n\nconst setUserData = ({ response, state, setState }) => {\n  const { data } = response;\n  if (data.exist) {\n    setState(\n      {\n        ...state,\n        exist: data.exist,\n        isLoading: false,\n        user: {\n          phone_number: data.user.phone_number,\n          first_name: data.user.first_name,\n          last_name: data.user.first_name,\n          email: data.user.email,\n        },\n      },\n    );\n  } else {\n    setState(\n      {\n        ...state,\n        exist: false,\n      },\n    );\n  }\n};\n\nconst getUserData = async ({ state, setState, modelName }) => {\n  const params = {\n    model: modelName,\n    userId: state.userId,\n  };\n  await modelShow(params)\n    .then((response) => setUserData({ response, state, setState }));\n};\n\nexport default getUserData;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\VinetiWorkSpace\\\\final-project-GG\\\\src\\\\components\\\\Client\\\\ClientLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { login } from '../../utils/API';\nimport { loginParams } from \"../../utils/configs\";\nimport { ChangeActionLoading, ChangeActionLoggedIn, mapStateToProps } from '../../redux/actions';\nimport { connect } from \"react-redux\";\nimport LoginForm from \"../LoginForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ClientLogin = props => {\n  _s();\n\n  const history = useHistory();\n  const state = props.appState;\n  const dispatch = props.dispatch;\n  const [fields, setFields] = useState({ ...loginParams,\n    model_name: 'Passenger'\n  });\n  useEffect(() => {\n    if (state.loggedIn) {\n      history.push(`/${state.userType}/${state.userId}`);\n    }\n\n    return () => {\n      dispatch(ChangeActionLoggedIn(state));\n    };\n  }, []);\n\n  const onClick = event => {\n    event.preventDefault();\n    Login(event).then();\n  };\n\n  const Login = async event => {\n    dispatch(ChangeActionLoading({\n      'isLoading': true\n    }));\n    const params = {\n      session: { ...fields,\n        remember_me: fields.remember_me === true ? '1' : '0'\n      }\n    };\n    await login(params).then(response => {\n      dispatch(ChangeActionLoggedIn({ ...state,\n        'isLoading': false,\n        'loggedIn': true,\n        'userType': response.data.model_name,\n        'userId': response.data.user.id\n      }));\n      history.push(`/${response.data.model_name}/${response.data.user.id}`);\n    }).catch(response => {\n      dispatch(ChangeActionLoggedIn({ ...state,\n        'isLoading': false\n      }));\n      setFields({ ...fields,\n        alert: response.message\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      fields: fields,\n      setFields: setFields,\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ClientLogin, \"Hyzdszp5hTD/ZSmNlobVr2mAJtE=\", false, function () {\n  return [useHistory];\n});\n\n_c = ClientLogin;\nexport default connect(mapStateToProps)(ClientLogin);\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientLogin\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/components/Client/ClientLogin.js"],"names":["React","useEffect","useState","useHistory","login","loginParams","ChangeActionLoading","ChangeActionLoggedIn","mapStateToProps","connect","LoginForm","ClientLogin","props","history","state","appState","dispatch","fields","setFields","model_name","loggedIn","push","userType","userId","onClick","event","preventDefault","Login","then","params","session","remember_me","response","data","user","id","catch","alert","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,mBAAT,EACSC,oBADT,EAESC,eAFT,QAEgC,qBAFhC;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAMW,KAAK,GAAGF,KAAK,CAACG,QAApB;AACA,QAAMC,QAAQ,GAAGJ,KAAK,CAACI,QAAvB;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EACjC,GAAGG,WAD8B;AAEjCc,IAAAA,UAAU,EAAE;AAFqB,GAAD,CAApC;AAKAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,KAAK,CAACM,QAAV,EAAoB;AAChBP,MAAAA,OAAO,CAACQ,IAAR,CAAc,IAAGP,KAAK,CAACQ,QAAS,IAAGR,KAAK,CAACS,MAAO,EAAhD;AACH;;AACD,WAAQ,MAAI;AACRP,MAAAA,QAAQ,CAACT,oBAAoB,CAACO,KAAD,CAArB,CAAR;AACH,KAFD;AAGH,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMU,OAAO,GAAIC,KAAD,IAAW;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,KAAK,CAACF,KAAD,CAAL,CACGG,IADH;AAEC,GAJL;;AAMA,QAAMD,KAAK,GAAG,MAAOF,KAAP,IAAiB;AAC3BT,IAAAA,QAAQ,CAACV,mBAAmB,CAAC;AAAC,mBAAa;AAAd,KAAD,CAApB,CAAR;AACA,UAAMuB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE,EACL,GAAGb,MADE;AAELc,QAAAA,WAAW,EAAEd,MAAM,CAACc,WAAP,KAAuB,IAAvB,GAA8B,GAA9B,GAAmC;AAF3C;AADE,KAAf;AAMA,UAAM3B,KAAK,CAACyB,MAAD,CAAL,CACHD,IADG,CACEI,QAAQ,IAAI;AACdhB,MAAAA,QAAQ,CAACT,oBAAoB,CAAC,EAC1B,GAAGO,KADuB;AAE1B,qBAAa,KAFa;AAG1B,oBAAY,IAHc;AAI1B,oBAAYkB,QAAQ,CAACC,IAAT,CAAcd,UAJA;AAK1B,kBAAUa,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBC;AALH,OAAD,CAArB,CAAR;AAOAtB,MAAAA,OAAO,CAACQ,IAAR,CAAc,IAAGW,QAAQ,CAACC,IAAT,CAAcd,UAAW,IAAGa,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBC,EAAG,EAAnE;AACH,KAVG,EAWHC,KAXG,CAWGJ,QAAQ,IAAI;AACfhB,MAAAA,QAAQ,CAACT,oBAAoB,CAAC,EAC1B,GAAGO,KADuB;AAE1B,qBAAa;AAFa,OAAD,CAArB,CAAR;AAIAI,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaoB,QAAAA,KAAK,EAAEL,QAAQ,CAACM;AAA7B,OAAD,CAAT;AACH,KAjBG,CAAN;AAkBH,GA1BD;;AA4BA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAErB,MAAnB;AAA2B,MAAA,SAAS,EAAEC,SAAtC;AAAiD,MAAA,OAAO,EAAEM;AAA1D;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CA1DD;;GAAMb,W;UACcR,U;;;KADdQ,W;AA4DN,eAAeF,OAAO,CAACD,eAAD,CAAP,CAAyBG,WAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { login } from '../../utils/API';\r\nimport { loginParams } from \"../../utils/configs\";\r\nimport { ChangeActionLoading,\r\n         ChangeActionLoggedIn,\r\n         mapStateToProps } from '../../redux/actions'\r\nimport { connect } from \"react-redux\";\r\nimport LoginForm from \"../LoginForm\";\r\n\r\nconst ClientLogin = (props) => {\r\n    const history = useHistory()\r\n    const state = props.appState\r\n    const dispatch = props.dispatch\r\n    \r\n    const [fields, setFields] = useState({\r\n        ...loginParams,\r\n        model_name: 'Passenger'\r\n    })\r\n    \r\n    useEffect(() => {\r\n        if (state.loggedIn) {\r\n            history.push(`/${state.userType}/${state.userId}`)\r\n        }\r\n        return (()=>{\r\n            dispatch(ChangeActionLoggedIn(state))\r\n        })\r\n    }, [])\r\n    \r\n    const onClick = (event) => {\r\n        event.preventDefault();\r\n        Login(event)\r\n          .then()\r\n        }\r\n\r\n    const Login = async (event) => {\r\n        dispatch(ChangeActionLoading({'isLoading': true}))\r\n        const params = {\r\n            session: {\r\n                ...fields,\r\n                remember_me: fields.remember_me === true ? '1': '0'\r\n            }\r\n        }\r\n        await login(params)\r\n          .then(response => {\r\n              dispatch(ChangeActionLoggedIn({\r\n                  ...state,\r\n                  'isLoading': false,\r\n                  'loggedIn': true,\r\n                  'userType': response.data.model_name,\r\n                  'userId': response.data.user.id\r\n              }))\r\n              history.push(`/${response.data.model_name}/${response.data.user.id}`)\r\n          })\r\n          .catch(response => {\r\n              dispatch(ChangeActionLoggedIn({\r\n                  ...state,\r\n                  'isLoading': false,\r\n              }))\r\n              setFields({ ...fields, alert: response.message })\r\n          })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LoginForm fields={fields} setFields={setFields} onClick={onClick} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(ClientLogin);\r\n"]},"metadata":{},"sourceType":"module"}
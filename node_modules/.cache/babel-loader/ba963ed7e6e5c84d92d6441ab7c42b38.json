{"ast":null,"code":"import React from 'react';\nimport { login } from \"./API\";\nimport { ChangeActionLoading, ChangeActionLoggedIn } from \"../redux/actions\";\n\nconst onClick = (event, fields, setFields, state, dispatch, history) => {\n  event.preventDefault();\n  Login(fields, setFields, state, dispatch, history).then();\n};\n\nconst Login = async (fields, setFields, state, dispatch, history) => {\n  const params = {\n    session: { ...fields,\n      remember_me: fields.remember_me === true ? '1' : '0'\n    }\n  };\n  await login(params).then(response => {\n    dispatch(ChangeActionLoggedIn({ ...state,\n      'isLoading': false,\n      'loggedIn': true,\n      'userType': response.data.model_name,\n      'userId': response.data.user.id\n    }));\n    history.push(`/${response.data.model_name}/${response.data.user.id}`);\n  }).catch(response => {\n    dispatch(ChangeActionLoading(false));\n    setFields({ ...fields,\n      alert: response.message\n    });\n  });\n};\n\n_c = Login;\nexport default onClick;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/utils/LoginOnClick.js"],"names":["React","login","ChangeActionLoading","ChangeActionLoggedIn","onClick","event","fields","setFields","state","dispatch","history","preventDefault","Login","then","params","session","remember_me","response","data","model_name","user","id","push","catch","alert","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,OAApB;AACA,SAAQC,mBAAR,EAA6BC,oBAA7B,QAAwD,kBAAxD;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA4CC,OAA5C,KAAwD;AACtEL,EAAAA,KAAK,CAACM,cAAN;AACAC,EAAAA,KAAK,CAACN,MAAD,EAASC,SAAT,EAAoBC,KAApB,EAA2BC,QAA3B,EAAqCC,OAArC,CAAL,CACGG,IADH;AAED,CAJD;;AAMA,MAAMD,KAAK,GAAG,OAAON,MAAP,EAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,QAAjC,EAA2CC,OAA3C,KAAuD;AACnE,QAAMI,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE,EACP,GAAGT,MADI;AAEPU,MAAAA,WAAW,EAAEV,MAAM,CAACU,WAAP,KAAuB,IAAvB,GAA8B,GAA9B,GAAmC;AAFzC;AADI,GAAf;AAMA,QAAMf,KAAK,CAACa,MAAD,CAAL,CACHD,IADG,CACEI,QAAQ,IAAI;AAChBR,IAAAA,QAAQ,CAACN,oBAAoB,CAAC,EAC5B,GAAGK,KADyB;AAE5B,mBAAa,KAFe;AAG5B,kBAAY,IAHgB;AAI5B,kBAAYS,QAAQ,CAACC,IAAT,CAAcC,UAJE;AAK5B,gBAAUF,QAAQ,CAACC,IAAT,CAAcE,IAAd,CAAmBC;AALD,KAAD,CAArB,CAAR;AAOAX,IAAAA,OAAO,CAACY,IAAR,CAAc,IAAGL,QAAQ,CAACC,IAAT,CAAcC,UAAW,IAAGF,QAAQ,CAACC,IAAT,CAAcE,IAAd,CAAmBC,EAAG,EAAnE;AACD,GAVG,EAWHE,KAXG,CAWGN,QAAQ,IAAI;AACjBR,IAAAA,QAAQ,CAACP,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACAK,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYkB,MAAAA,KAAK,EAAEP,QAAQ,CAACQ;AAA5B,KAAD,CAAT;AACD,GAdG,CAAN;AAeD,CAtBD;;KAAMb,K;AAwBN,eAAeR,OAAf","sourcesContent":["import React from 'react'\r\nimport {login} from \"./API\";\r\nimport {ChangeActionLoading, ChangeActionLoggedIn} from \"../redux/actions\";\r\n\r\nconst onClick = (event, fields, setFields, state, dispatch, history) => {\r\n  event.preventDefault();\r\n  Login(fields, setFields, state, dispatch, history)\r\n    .then()\r\n}\r\n\r\nconst Login = async (fields, setFields, state, dispatch, history) => {\r\n  const params = {\r\n    session: {\r\n      ...fields,\r\n      remember_me: fields.remember_me === true ? '1': '0'\r\n    }\r\n  }\r\n  await login(params)\r\n    .then(response => {\r\n      dispatch(ChangeActionLoggedIn({\r\n        ...state,\r\n        'isLoading': false,\r\n        'loggedIn': true,\r\n        'userType': response.data.model_name,\r\n        'userId': response.data.user.id\r\n      }))\r\n      history.push(`/${response.data.model_name}/${response.data.user.id}`)\r\n    })\r\n    .catch(response => {\r\n      dispatch(ChangeActionLoading(false))\r\n      setFields({...fields, alert: response.message})\r\n    })\r\n}\r\n\r\nexport default onClick"]},"metadata":{},"sourceType":"module"}
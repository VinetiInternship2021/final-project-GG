{"ast":null,"code":"import { signUp } from '../utils/API';\nimport { ChangeActionLoading, ChangeActionLoggedIn } from '../redux/actions';\n\nconst SignUpHelper = async (fields, setFields, state, dispatch, history, params) => {\n  await signUp(params).then(response => {\n    dispatch(ChangeActionLoggedIn({ ...state,\n      isLoading: false,\n      loggedIn: true,\n      userType: response.data.userType,\n      userId: response.data.user.id\n    }));\n    history.push(`/${response.data.userType}/${response.data.user.id}`);\n  }).catch(response => {\n    const errors = [];\n\n    if (response.status === 500) {\n      errors.push('This phone number registered');\n      dispatch(ChangeActionLoading({\n        isLoading: false\n      }));\n      setFields({ ...fields,\n        alert: errors\n      });\n    } else if (!response.created) {\n      Object.entries(response.errors).map(error => {\n        errors.push(`${error[0]} ${error[1]}`);\n        return errors;\n      });\n      setFields({ ...fields,\n        alert: errors\n      });\n    } else {\n      setFields({ ...fields,\n        alert: response.message\n      });\n    }\n  });\n};\n\n_c = SignUpHelper;\nexport default SignUpHelper;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpHelper\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/helpers/SignUpHelper.js"],"names":["signUp","ChangeActionLoading","ChangeActionLoggedIn","SignUpHelper","fields","setFields","state","dispatch","history","params","then","response","isLoading","loggedIn","userType","data","userId","user","id","push","catch","errors","status","alert","created","Object","entries","map","error","message"],"mappings":"AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,kBAA1D;;AAEA,MAAMC,YAAY,GAAG,OAAOC,MAAP,EAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,QAAjC,EAA2CC,OAA3C,EAAoDC,MAApD,KAA+D;AAClF,QAAMT,MAAM,CAACS,MAAD,CAAN,CACHC,IADG,CACGC,QAAD,IAAc;AAClBJ,IAAAA,QAAQ,CAACL,oBAAoB,CAAC,EAC5B,GAAGI,KADyB;AAE5BM,MAAAA,SAAS,EAAE,KAFiB;AAG5BC,MAAAA,QAAQ,EAAE,IAHkB;AAI5BC,MAAAA,QAAQ,EAAEH,QAAQ,CAACI,IAAT,CAAcD,QAJI;AAK5BE,MAAAA,MAAM,EAAEL,QAAQ,CAACI,IAAT,CAAcE,IAAd,CAAmBC;AALC,KAAD,CAArB,CAAR;AAOAV,IAAAA,OAAO,CAACW,IAAR,CAAc,IAAGR,QAAQ,CAACI,IAAT,CAAcD,QAAS,IAAGH,QAAQ,CAACI,IAAT,CAAcE,IAAd,CAAmBC,EAAG,EAAjE;AACD,GAVG,EAWHE,KAXG,CAWIT,QAAD,IAAc;AACnB,UAAMU,MAAM,GAAG,EAAf;;AACA,QAAIV,QAAQ,CAACW,MAAT,KAAoB,GAAxB,EAA6B;AAC3BD,MAAAA,MAAM,CAACF,IAAP,CAAY,8BAAZ;AACAZ,MAAAA,QAAQ,CAACN,mBAAmB,CAAC;AAAEW,QAAAA,SAAS,EAAE;AAAb,OAAD,CAApB,CAAR;AACAP,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAamB,QAAAA,KAAK,EAAEF;AAApB,OAAD,CAAT;AACD,KAJD,MAIO,IAAI,CAACV,QAAQ,CAACa,OAAd,EAAuB;AAC5BC,MAAAA,MAAM,CAACC,OAAP,CAAef,QAAQ,CAACU,MAAxB,EAAgCM,GAAhC,CAAqCC,KAAD,IAAW;AAC7CP,QAAAA,MAAM,CAACF,IAAP,CAAa,GAAES,KAAK,CAAC,CAAD,CAAI,IAAGA,KAAK,CAAC,CAAD,CAAI,EAApC;AACA,eAAOP,MAAP;AACD,OAHD;AAIAhB,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAamB,QAAAA,KAAK,EAAEF;AAApB,OAAD,CAAT;AACD,KANM,MAMA;AACLhB,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAamB,QAAAA,KAAK,EAAEZ,QAAQ,CAACkB;AAA7B,OAAD,CAAT;AACD;AACF,GA1BG,CAAN;AA2BD,CA5BD;;KAAM1B,Y;AA8BN,eAAeA,YAAf","sourcesContent":["import { signUp } from '../utils/API';\nimport { ChangeActionLoading, ChangeActionLoggedIn } from '../redux/actions';\n\nconst SignUpHelper = async (fields, setFields, state, dispatch, history, params) => {\n  await signUp(params)\n    .then((response) => {\n      dispatch(ChangeActionLoggedIn({\n        ...state,\n        isLoading: false,\n        loggedIn: true,\n        userType: response.data.userType,\n        userId: response.data.user.id,\n      }));\n      history.push(`/${response.data.userType}/${response.data.user.id}`);\n    })\n    .catch((response) => {\n      const errors = [];\n      if (response.status === 500) {\n        errors.push('This phone number registered');\n        dispatch(ChangeActionLoading({ isLoading: false }));\n        setFields({ ...fields, alert: errors });\n      } else if (!response.created) {\n        Object.entries(response.errors).map((error) => {\n          errors.push(`${error[0]} ${error[1]}`);\n          return errors;\n        });\n        setFields({ ...fields, alert: errors });\n      } else {\n        setFields({ ...fields, alert: response.message });\n      }\n    });\n};\n\nexport default SignUpHelper;\n"]},"metadata":{},"sourceType":"module"}
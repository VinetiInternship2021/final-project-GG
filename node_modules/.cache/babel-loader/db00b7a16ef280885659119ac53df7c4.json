{"ast":null,"code":"import { login } from '../utils/API';\nimport { ChangeActionLoading, ChangeActionLoggedIn } from '../redux/actions';\n\nconst LoginHelper = async (fields, setFields, state, dispatch, history) => {\n  const params = {\n    session: { ...fields,\n      remember_me: fields.remember_me === true ? '1' : '0'\n    }\n  };\n  await login(params).then(response => {\n    dispatch(ChangeActionLoggedIn({ ...state,\n      isLoading: false,\n      loggedIn: true,\n      userType: response.data.model_name,\n      userId: response.data.user.id\n    }));\n    history.push(`/${response.data.model_name}/${response.data.user.id}`);\n  }).catch(response => {\n    dispatch(ChangeActionLoading(false));\n    setFields({ ...fields,\n      alert: response.message\n    });\n  });\n};\n\n_c = LoginHelper;\nexport default LoginHelper;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginHelper\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/helpers/LoginHelper.js"],"names":["login","ChangeActionLoading","ChangeActionLoggedIn","LoginHelper","fields","setFields","state","dispatch","history","params","session","remember_me","then","response","isLoading","loggedIn","userType","data","model_name","userId","user","id","push","catch","alert","message"],"mappings":"AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,kBAA1D;;AAEA,MAAMC,WAAW,GAAG,OAAOC,MAAP,EAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,QAAjC,EAA2CC,OAA3C,KAAuD;AACzE,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE,EACP,GAAGN,MADI;AAEPO,MAAAA,WAAW,EAAEP,MAAM,CAACO,WAAP,KAAuB,IAAvB,GAA8B,GAA9B,GAAoC;AAF1C;AADI,GAAf;AAMA,QAAMX,KAAK,CAACS,MAAD,CAAL,CACHG,IADG,CACGC,QAAD,IAAc;AAClBN,IAAAA,QAAQ,CAACL,oBAAoB,CAAC,EAC5B,GAAGI,KADyB;AAE5BQ,MAAAA,SAAS,EAAE,KAFiB;AAG5BC,MAAAA,QAAQ,EAAE,IAHkB;AAI5BC,MAAAA,QAAQ,EAAEH,QAAQ,CAACI,IAAT,CAAcC,UAJI;AAK5BC,MAAAA,MAAM,EAAEN,QAAQ,CAACI,IAAT,CAAcG,IAAd,CAAmBC;AALC,KAAD,CAArB,CAAR;AAOAb,IAAAA,OAAO,CAACc,IAAR,CAAc,IAAGT,QAAQ,CAACI,IAAT,CAAcC,UAAW,IAAGL,QAAQ,CAACI,IAAT,CAAcG,IAAd,CAAmBC,EAAG,EAAnE;AACD,GAVG,EAWHE,KAXG,CAWIV,QAAD,IAAc;AACnBN,IAAAA,QAAQ,CAACN,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACAI,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaoB,MAAAA,KAAK,EAAEX,QAAQ,CAACY;AAA7B,KAAD,CAAT;AACD,GAdG,CAAN;AAeD,CAtBD;;KAAMtB,W;AAwBN,eAAeA,WAAf","sourcesContent":["import { login } from '../utils/API';\nimport { ChangeActionLoading, ChangeActionLoggedIn } from '../redux/actions';\n\nconst LoginHelper = async (fields, setFields, state, dispatch, history) => {\n  const params = {\n    session: {\n      ...fields,\n      remember_me: fields.remember_me === true ? '1' : '0',\n    },\n  };\n  await login(params)\n    .then((response) => {\n      dispatch(ChangeActionLoggedIn({\n        ...state,\n        isLoading: false,\n        loggedIn: true,\n        userType: response.data.model_name,\n        userId: response.data.user.id,\n      }));\n      history.push(`/${response.data.model_name}/${response.data.user.id}`);\n    })\n    .catch((response) => {\n      dispatch(ChangeActionLoading(false));\n      setFields({ ...fields, alert: response.message });\n    });\n};\n\nexport default LoginHelper;\n"]},"metadata":{},"sourceType":"module"}
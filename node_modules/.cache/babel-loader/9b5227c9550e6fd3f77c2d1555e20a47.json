{"ast":null,"code":"var _jsxFileName = \"D:\\\\VinetiWorkSpace\\\\final-project-GG\\\\src\\\\components\\\\Driver\\\\DriverLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { login } from '../../utils/API';\nimport { loginParams } from \"../../utils/configs\";\nimport { ChangeActionLoading, ChangeActionLoggedIn, mapStateToProps } from '../../redux/actions';\nimport { connect } from \"react-redux\";\nimport LoginForm from \"../LoginForm\"; // import ErrorMessages from \"../layouts/ErrorMessages\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DriverLogin = props => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = props.dispatch;\n  const state = props.appState;\n  const [fields, setFields] = useState({ ...loginParams,\n    model_name: 'Driver'\n  });\n  useEffect(() => {\n    if (state.loggedIn) {\n      history.push(`/${state.userType}/${state.userId}`);\n    } // return (()=>{\n    //   dispatch(ChangeActionLoggedIn(state))\n    // })\n\n  }, []);\n\n  const onClick = event => {\n    Login(event).then();\n  };\n\n  const Login = async event => {\n    dispatch(ChangeActionLoading({\n      'isLoading': true\n    }));\n    const params = {\n      session: { ...fields,\n        remember_me: fields.remember_me === true ? '1' : '0'\n      }\n    };\n    await login(params).then(response => {\n      dispatch(ChangeActionLoggedIn({ ...state,\n        'isLoading': false,\n        'loggedIn': true,\n        'userType': response.data.model_name,\n        'userId': response.data.user.id\n      }));\n      history.push(`/${response.data.model_name}/${response.data.user.id}`);\n    }).catch(response => {\n      setFields({ ...fields,\n        alert: response.message\n      });\n      console.log(fields);\n      dispatch(ChangeActionLoading(false));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"w-25 border position-absolute top-50 start-50 translate-middle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"me-3 mx-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Driver Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          className: \"form-label\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: () => {\n            setFields({ ...fields,\n              alert: ''\n            });\n          },\n          onChange: e => {\n            setFields({ ...fields,\n              phone_number: e.target.value\n            });\n          },\n          id: \"phone\",\n          type: \"number\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: () => {\n            setFields({ ...fields,\n              alert: ''\n            });\n          },\n          onChange: e => {\n            setFields({ ...fields,\n              password: e.target.value\n            });\n          },\n          id: \"password\",\n          type: \"password\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rememberMe\",\n          className: \"form-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            name: \"rememberMe\",\n            type: \"checkbox\",\n            checked: fields.remember_me,\n            onChange: event => setFields({ ...fields,\n              remember_me: event.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), \"Remember\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: fields.alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault();\n          onClick(e);\n        },\n        type: \"submit\",\n        className: \"btn btn-outline-success mx-3 mb-3\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(DriverLogin, \"up1KnnNQsZlcsK9E4l7YCibDfEs=\", false, function () {\n  return [useHistory];\n});\n\n_c = DriverLogin;\nexport default connect(mapStateToProps)(DriverLogin);\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverLogin\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/components/Driver/DriverLogin.js"],"names":["React","useState","useEffect","useHistory","login","loginParams","ChangeActionLoading","ChangeActionLoggedIn","mapStateToProps","connect","LoginForm","DriverLogin","props","history","dispatch","state","appState","fields","setFields","model_name","loggedIn","push","userType","userId","onClick","event","Login","then","params","session","remember_me","response","data","user","id","catch","alert","message","console","log","e","phone_number","target","value","password","checked","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { login } from '../../utils/API';\r\nimport { loginParams } from \"../../utils/configs\";\r\nimport {ChangeActionLoading,\r\n        ChangeActionLoggedIn,\r\n        mapStateToProps} from '../../redux/actions';\r\nimport {connect} from \"react-redux\";\r\nimport LoginForm from \"../LoginForm\";\r\n// import ErrorMessages from \"../layouts/ErrorMessages\";\r\n\r\nconst DriverLogin = (props) => {\r\n  const history = useHistory()\r\n  const dispatch = props.dispatch\r\n  const state = props.appState\r\n  const [fields, setFields] = useState({\r\n      ...loginParams,\r\n      model_name: 'Driver'\r\n  })\r\n  \r\n  useEffect(() => {\r\n    if (state.loggedIn) {\r\n      history.push(`/${state.userType}/${state.userId}`)\r\n    }\r\n    // return (()=>{\r\n    //   dispatch(ChangeActionLoggedIn(state))\r\n    // })\r\n  }, [])\r\n\r\n    const onClick = (event) => {\r\n      Login(event)\r\n        .then()\r\n    }\r\n    \r\n    const Login = async (event) => {\r\n      dispatch(ChangeActionLoading({'isLoading': true}))\r\n      const params = {\r\n        session: {\r\n          ...fields,\r\n          remember_me: fields.remember_me === true ? '1': '0'\r\n        }\r\n      }\r\n      await login(params)\r\n        .then(response => {\r\n          dispatch(ChangeActionLoggedIn({\r\n            ...state,\r\n            'isLoading': false,\r\n            'loggedIn': true,\r\n            'userType': response.data.model_name,\r\n            'userId': response.data.user.id\r\n          }))\r\n          history.push(`/${response.data.model_name}/${response.data.user.id}`)\r\n        })\r\n        .catch(response => {\r\n          setFields({ ...fields, alert: response.message })\r\n          console.log(fields)\r\n          dispatch(ChangeActionLoading(false))\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n          {/*<ErrorMessages Errors={}/>*/}\r\n          {/*<LoginForm fields={fields} setFields={setFields} onClick={onClick} />*/}\r\n          <form className=\"w-25 border position-absolute top-50 start-50 translate-middle\">\r\n            <div className=\"me-3 mx-3\">\r\n              <br />\r\n              <h5>Driver Login</h5>\r\n              <label htmlFor=\"phone\" className=\"form-label\">Phone</label>\r\n              <input onClick={() => {\r\n                setFields({ ...fields, alert: '' })\r\n              }}\r\n                     onChange={(e) => {\r\n                       setFields({ ...fields, phone_number: e.target.value })\r\n                     }}\r\n                     id=\"phone\"\r\n                     type=\"number\"\r\n                     className=\"form-control\" />\r\n              <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n              <input onClick={() => {\r\n                setFields({ ...fields, alert: '' })\r\n              }}\r\n                     onChange={(e) => {\r\n                       setFields({ ...fields, password: e.target.value })\r\n                     }}\r\n                     id=\"password\"\r\n                     type=\"password\"\r\n                     className=\"form-control\"/>\r\n      \r\n              <label htmlFor=\"rememberMe\" className=\"form-label\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  name=\"rememberMe\"\r\n                  type=\"checkbox\"\r\n                  checked={fields.remember_me}\r\n                  onChange={ (event) =>  setFields({\r\n                    ...fields,\r\n                    remember_me: event.target.checked\r\n                  })\r\n                  } />\r\n                Remember\r\n              </label>\r\n              <p>{fields.alert}</p>\r\n            </div>\r\n            <button onClick={(e) => {\r\n              e.preventDefault()\r\n              onClick(e)\r\n            }\r\n            } type=\"submit\" className=\"btn btn-outline-success mx-3 mb-3\">Submit</button>\r\n          </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(DriverLogin);\r\n"]},"metadata":{},"sourceType":"module"}
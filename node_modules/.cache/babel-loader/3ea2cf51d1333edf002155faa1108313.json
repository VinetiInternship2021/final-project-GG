{"ast":null,"code":"var _jsxFileName = \"D:\\\\VinetiWorkSpace\\\\final-project-GG\\\\src\\\\utils\\\\ProfileInfoTable.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileInfoTable = ({\n  fieldsData\n}) => {\n  const fields = Object.entries(fieldsData).map((key, index) => /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: key[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: typeof key[1] === 'boolean' ? key[1].toString() : key[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, key[0], false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this));\n  return fields;\n};\n\n_c = ProfileInfoTable;\nexport default ProfileInfoTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileInfoTable\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/utils/ProfileInfoTable.js"],"names":["React","ProfileInfoTable","fieldsData","fields","Object","entries","map","key","index","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAC3C,QAAMC,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAeH,UAAf,EAA2BI,GAA3B,CAA+B,CAACC,GAAD,EAAMC,KAAN,kBAC5C;AAAA,2BACE;AAAA,8BACE;AAAA,kBAAMD,GAAG,CAAC,CAAD;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAK,OAAOA,GAAG,CAAC,CAAD,CAAV,KAAkB,SAAlB,GAA8BA,GAAG,CAAC,CAAD,CAAH,CAAOE,QAAP,EAA9B,GAAkDF,GAAG,CAAC,CAAD;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAAYA,GAAG,CAAC,CAAD,CAAf;AAAA;AAAA;AAAA;AAAA,UADa,CAAf;AAQA,SAAOJ,MAAP;AACD,CAVD;;KAAMF,gB;AAWN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\n\nconst ProfileInfoTable = ({ fieldsData }) => {\n  const fields = Object.entries(fieldsData).map((key, index) => (\n    <thead key={key[0]}>\n      <tr>\n        <th>{ key[0] }</th>\n        <th>{typeof key[1] === 'boolean' ? key[1].toString() : key[1]}</th>\n      </tr>\n    </thead>\n  ));\n  return fields;\n};\nexport default ProfileInfoTable;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\VinetiWorkSpace\\\\final-project-GG\\\\src\\\\components\\\\Admin\\\\AdminLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { appRoutes } from '../../utils/configs';\nimport LoginForm from \"../LoginForm\";\nimport { login } from '../../utils/API';\nimport { loginParams } from \"../../utils/configs\";\nimport { ChangeActionLoading, ChangeActionLoggedIn, mapStateToProps } from '../../redux/actions';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminLogin = props => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = props.dispatch;\n  const state = props.appState;\n  const [fields, setFields] = useState({ ...loginParams,\n    model_name: 'SuperUser'\n  });\n  useEffect(() => {\n    if (state.loggedIn) {\n      history.push(`/${state.userType}/${state.userId}`);\n    }\n  }, []);\n\n  const onClick = event => {\n    event.preventDefault();\n    Login(event).then();\n  };\n\n  const Login = async event => {\n    dispatch(ChangeActionLoading({\n      'isLoading': true\n    }));\n    const params = {\n      session: { ...fields,\n        remember_me: fields.remember_me === true ? '1' : '0'\n      }\n    };\n    await login(params).then(response => {\n      dispatch(ChangeActionLoggedIn({ ...state,\n        'isLoading': false,\n        'loggedIn': true,\n        'userType': response.data.model_name,\n        'userId': response.data.user.id\n      }));\n      history.push(`/${response.data.model_name}/${response.data.user.id}`);\n    }).catch(response => {\n      dispatch(ChangeActionLoading(false));\n      setFields({ ...fields,\n        alert: response.message\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoginForm, {\n      fields: fields,\n      setFields: setFields,\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AdminLogin, \"kSQg6i8T2eGh1phCF72T183bPCU=\", false, function () {\n  return [useHistory];\n});\n\n_c = AdminLogin;\nexport default connect(mapStateToProps)(AdminLogin);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/components/Admin/AdminLogin.js"],"names":["React","useEffect","useState","useHistory","appRoutes","LoginForm","login","loginParams","ChangeActionLoading","ChangeActionLoggedIn","mapStateToProps","connect","AdminLogin","props","history","dispatch","state","appState","fields","setFields","model_name","loggedIn","push","userType","userId","onClick","event","preventDefault","Login","then","params","session","remember_me","response","data","user","id","catch","alert","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAAQC,mBAAR,EACQC,oBADR,EAEQC,eAFR,QAE8B,qBAF9B;AAGA,SAAQC,OAAR,QAAsB,aAAtB;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,OAAO,GAAGX,UAAU,EAA1B;AACA,QAAMY,QAAQ,GAAGF,KAAK,CAACE,QAAvB;AACA,QAAMC,KAAK,GAAGH,KAAK,CAACI,QAApB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EACjC,GAAGK,WAD8B;AAEjCa,IAAAA,UAAU,EAAE;AAFqB,GAAD,CAApC;AAKAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,KAAK,CAACK,QAAV,EAAoB;AAChBP,MAAAA,OAAO,CAACQ,IAAR,CAAc,IAAGN,KAAK,CAACO,QAAS,IAAGP,KAAK,CAACQ,MAAO,EAAhD;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,KAAK,CAACF,KAAD,CAAL,CACGG,IADH;AAEH,GAJD;;AAMA,QAAMD,KAAK,GAAG,MAAOF,KAAP,IAAiB;AAC3BX,IAAAA,QAAQ,CAACP,mBAAmB,CAAC;AAAC,mBAAa;AAAd,KAAD,CAApB,CAAR;AACA,UAAMsB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE,EACL,GAAGb,MADE;AAELc,QAAAA,WAAW,EAAEd,MAAM,CAACc,WAAP,KAAuB,IAAvB,GAA8B,GAA9B,GAAmC;AAF3C;AADE,KAAf;AAMA,UAAM1B,KAAK,CAACwB,MAAD,CAAL,CACHD,IADG,CACEI,QAAQ,IAAI;AACdlB,MAAAA,QAAQ,CAACN,oBAAoB,CAAC,EAC1B,GAAGO,KADuB;AAE1B,qBAAa,KAFa;AAG1B,oBAAY,IAHc;AAI1B,oBAAYiB,QAAQ,CAACC,IAAT,CAAcd,UAJA;AAK1B,kBAAUa,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBC;AALH,OAAD,CAArB,CAAR;AAOAtB,MAAAA,OAAO,CAACQ,IAAR,CAAc,IAAGW,QAAQ,CAACC,IAAT,CAAcd,UAAW,IAAGa,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBC,EAAG,EAAnE;AACH,KAVG,EAWHC,KAXG,CAWGJ,QAAQ,IAAI;AACflB,MAAAA,QAAQ,CAACP,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACAW,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaoB,QAAAA,KAAK,EAAEL,QAAQ,CAACM;AAA7B,OAAD,CAAT;AACH,KAdG,CAAN;AAeH,GAvBD;;AAyBA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAErB,MAAnB;AAA2B,MAAA,SAAS,EAAEC,SAAtC;AAAiD,MAAA,OAAO,EAAEM;AAA1D;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CAnDD;;GAAMb,U;UACcT,U;;;KADdS,U;AAqDN,eAAeD,OAAO,CAACD,eAAD,CAAP,CAAyBE,UAAzB,CAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { appRoutes } from '../../utils/configs'\r\nimport LoginForm from \"../LoginForm\";\r\nimport { login } from '../../utils/API';\r\nimport { loginParams } from \"../../utils/configs\";\r\nimport {ChangeActionLoading,\r\n        ChangeActionLoggedIn,\r\n        mapStateToProps} from '../../redux/actions';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst AdminLogin = (props) => {\r\n    const history = useHistory()\r\n    const dispatch = props.dispatch\r\n    const state = props.appState\r\n    const [fields, setFields] = useState({\r\n        ...loginParams,\r\n        model_name: 'SuperUser'\r\n    })\r\n    \r\n    useEffect(() => {\r\n        if (state.loggedIn) {\r\n            history.push(`/${state.userType}/${state.userId}`)\r\n        }\r\n    }, [])\r\n\r\n    const onClick = (event) => {\r\n        event.preventDefault();\r\n        Login(event)\r\n          .then()\r\n    }\r\n    \r\n    const Login = async (event) => {\r\n        dispatch(ChangeActionLoading({'isLoading': true}))\r\n        const params = {\r\n            session: {\r\n                ...fields,\r\n                remember_me: fields.remember_me === true ? '1': '0'\r\n            }\r\n        }\r\n        await login(params)\r\n          .then(response => {\r\n              dispatch(ChangeActionLoggedIn({\r\n                  ...state,\r\n                  'isLoading': false,\r\n                  'loggedIn': true,\r\n                  'userType': response.data.model_name,\r\n                  'userId': response.data.user.id\r\n              }))\r\n              history.push(`/${response.data.model_name}/${response.data.user.id}`)\r\n          })\r\n          .catch(response => {\r\n              dispatch(ChangeActionLoading(false))\r\n              setFields({ ...fields, alert: response.message })\r\n          })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LoginForm fields={fields} setFields={setFields} onClick={onClick} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(AdminLogin);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from 'react';\nimport { signUp } from \"./API\";\nimport { ChangeActionLoading, ChangeActionLoggedIn } from \"../redux/actions\";\n\nconst onClickBtn = (event, fields, setFields, state, dispatch, history, params) => {\n  event.preventDefault();\n  SignUp(fields, setFields, state, dispatch, history, params).then();\n};\n\nconst SignUp = async (fields, setFields, state, dispatch, history, params) => {\n  await signUp(params).then(response => {\n    dispatch(ChangeActionLoggedIn({ ...state,\n      'isLoading': false,\n      'loggedIn': true,\n      'userType': response.data.userType,\n      'userId': response.data.user.id\n    }));\n    history.push(`/${response.data.userType}/${response.data.user.id}`);\n  }).catch(response => {\n    let errors = [];\n\n    if (response.status === 500) {\n      errors.push('This phone number registered');\n      dispatch(ChangeActionLoading({\n        'isLoading': false\n      }));\n      setFields({ ...fields,\n        alert: errors\n      });\n    } else {\n      if (!response.created) {\n        Object.entries(response.errors).map(error => {\n          errors.push(`${error[0]} ${error[1]}`);\n        });\n        setFields({ ...fields,\n          alert: errors\n        });\n      } else {\n        setFields({ ...fields,\n          alert: response.message\n        });\n      }\n    }\n  });\n};\n\n_c = SignUp;\nexport default onClickBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/utils/SignupOnClick.js"],"names":["React","signUp","ChangeActionLoading","ChangeActionLoggedIn","onClickBtn","event","fields","setFields","state","dispatch","history","params","preventDefault","SignUp","then","response","data","userType","user","id","push","catch","errors","status","alert","created","Object","entries","map","error","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,OAArB;AACA,SAAQC,mBAAR,EAA6BC,oBAA7B,QAAwD,kBAAxD;;AAEA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA4CC,OAA5C,EAAqDC,MAArD,KAAgE;AACjFN,EAAAA,KAAK,CAACO,cAAN;AACAC,EAAAA,MAAM,CAACP,MAAD,EAASC,SAAT,EAAoBC,KAApB,EAA2BC,QAA3B,EAAqCC,OAArC,EAA8CC,MAA9C,CAAN,CACGG,IADH;AAED,CAJD;;AAMA,MAAMD,MAAM,GAAG,OAAOP,MAAP,EAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,QAAjC,EAA2CC,OAA3C,EAAoDC,MAApD,KAA+D;AAC5E,QAAMV,MAAM,CAACU,MAAD,CAAN,CACHG,IADG,CACEC,QAAQ,IAAI;AAChBN,IAAAA,QAAQ,CAACN,oBAAoB,CAAC,EAC5B,GAAGK,KADyB;AAE5B,mBAAa,KAFe;AAG5B,kBAAY,IAHgB;AAI5B,kBAAYO,QAAQ,CAACC,IAAT,CAAcC,QAJE;AAK5B,gBAAUF,QAAQ,CAACC,IAAT,CAAcE,IAAd,CAAmBC;AALD,KAAD,CAArB,CAAR;AAOAT,IAAAA,OAAO,CAACU,IAAR,CAAc,IAAGL,QAAQ,CAACC,IAAT,CAAcC,QAAS,IAAGF,QAAQ,CAACC,IAAT,CAAcE,IAAd,CAAmBC,EAAG,EAAjE;AACD,GAVG,EAWHE,KAXG,CAWGN,QAAQ,IAAI;AACjB,QAAIO,MAAM,GAAG,EAAb;;AACA,QAAIP,QAAQ,CAACQ,MAAT,KAAoB,GAAxB,EAA6B;AAC3BD,MAAAA,MAAM,CAACF,IAAP,CAAY,8BAAZ;AACAX,MAAAA,QAAQ,CAACP,mBAAmB,CAAC;AAAC,qBAAa;AAAd,OAAD,CAApB,CAAR;AACAK,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAakB,QAAAA,KAAK,EAAEF;AAApB,OAAD,CAAT;AACD,KAJD,MAKK;AACH,UAAI,CAACP,QAAQ,CAACU,OAAd,EAAuB;AACrBC,QAAAA,MAAM,CAACC,OAAP,CAAeZ,QAAQ,CAACO,MAAxB,EAAgCM,GAAhC,CAAqCC,KAAD,IAAW;AAC7CP,UAAAA,MAAM,CAACF,IAAP,CAAa,GAAES,KAAK,CAAC,CAAD,CAAI,IAAGA,KAAK,CAAC,CAAD,CAAI,EAApC;AACD,SAFD;AAGAtB,QAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAakB,UAAAA,KAAK,EAAEF;AAApB,SAAD,CAAT;AACD,OALD,MAMK;AACHf,QAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAakB,UAAAA,KAAK,EAAET,QAAQ,CAACe;AAA7B,SAAD,CAAT;AACD;AACF;AACF,GA7BG,CAAN;AA8BD,CA/BD;;KAAMjB,M;AAiCN,eAAeT,UAAf","sourcesContent":["import React from 'react'\r\nimport {signUp} from \"./API\";\r\nimport {ChangeActionLoading, ChangeActionLoggedIn} from \"../redux/actions\";\r\n\r\nconst onClickBtn = (event, fields, setFields, state, dispatch, history, params) => {\r\n  event.preventDefault()\r\n  SignUp(fields, setFields, state, dispatch, history, params)\r\n    .then()\r\n}\r\n\r\nconst SignUp = async (fields, setFields, state, dispatch, history, params) => {\r\n  await signUp(params)\r\n    .then(response => {\r\n      dispatch(ChangeActionLoggedIn({\r\n        ...state,\r\n        'isLoading': false,\r\n        'loggedIn': true,\r\n        'userType': response.data.userType,\r\n        'userId': response.data.user.id\r\n      }))\r\n      history.push(`/${response.data.userType}/${response.data.user.id}`)\r\n    })\r\n    .catch(response => {\r\n      let errors = []\r\n      if (response.status === 500) {\r\n        errors.push('This phone number registered')\r\n        dispatch(ChangeActionLoading({'isLoading': false}))\r\n        setFields({ ...fields, alert: errors })\r\n      }\r\n      else {\r\n        if (!response.created) {\r\n          Object.entries(response.errors).map((error) => {\r\n            errors.push(`${error[0]} ${error[1]}`)\r\n          })\r\n          setFields({ ...fields, alert: errors })\r\n        }\r\n        else {\r\n          setFields({ ...fields, alert: response.message })\r\n        }\r\n      }\r\n    })\r\n}\r\n\r\nexport default onClickBtn"]},"metadata":{},"sourceType":"module"}
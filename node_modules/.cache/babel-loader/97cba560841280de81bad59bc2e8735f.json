{"ast":null,"code":"var _jsxFileName = \"D:\\\\VinetiWorkSpace\\\\final-project-GG\\\\src\\\\components\\\\Driver\\\\DriverLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { login } from '../../utils/API';\nimport { loginParams } from \"../../utils/configs\";\nimport { ChangeActionLoading, ChangeActionLoggedIn, mapStateToProps } from '../../redux/actions';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DriverLogin = props => {\n  _s();\n\n  const history = useHistory();\n  const state = props.appState;\n  const dispatch = props.dispatch; // const [authData, setAuthData] = useState(\n  //   {\n  //       'loggedIn': false, 'userType': 'None', 'userId': 'None'\n  //   })\n\n  const [fields, setFields] = useState({ ...loginParams,\n    model_name: 'Driver'\n  }); //\n\n  useEffect(() => {\n    console.log(state, 'driver login');\n\n    if (state.loggedIn) {\n      history.push(`/${state.userType}/${state.userId}`);\n    }\n  }, []);\n\n  const onClick = event => {\n    event.preventDefault();\n    dispatch(ChangeActionLoading({\n      'isLoading': true\n    }));\n    console.log(state, ' BEFOR LOGIN');\n    Login(event).then();\n  };\n\n  const Login = async event => {\n    const params = {\n      session: { ...fields,\n        remember_me: fields.remember_me === true ? '1' : '0'\n      }\n    };\n    await login(params).then(response => {\n      dispatch(ChangeActionLoggedIn({ ...state,\n        'isLoading': false,\n        'loggedIn': true,\n        'userType': '',\n        'userId': ''\n      }));\n      console.log(state, ' AFTER LOGIN');\n      history.push(`/${response.data.model_name}/${response.data.user.id}`);\n    }).catch(response => {\n      dispatch(ChangeActionLoggedIn({ ...state,\n        'isLoading': false\n      }));\n      setFields({ ...fields,\n        alert: response.message\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"w-25 border position-absolute top-50 start-50 translate-middle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"me-3 mx-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Driver Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          className: \"form-label\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: () => {\n            setFields({ ...fields,\n              alert: ''\n            });\n          },\n          onChange: e => {\n            setFields({ ...fields,\n              phone_number: e.target.value\n            });\n          },\n          id: \"phone\",\n          type: \"number\",\n          className: \"form-control\",\n          value: fields.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: () => {\n            setFields({ ...fields,\n              alert: ''\n            });\n          },\n          onChange: e => {\n            setFields({ ...fields,\n              password: e.target.value\n            });\n          },\n          id: \"password\",\n          type: \"password\",\n          className: \"form-control\",\n          value: fields.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rememberMe\",\n          className: \"form-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            name: \"rememberMe\",\n            type: \"checkbox\",\n            checked: fields.remember_me,\n            onChange: event => setFields({ ...fields,\n              remember_me: event.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), \"Remember\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: fields.alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          onClick(e);\n        },\n        type: \"submit\",\n        className: \"btn btn-outline-success mx-3 mb-3\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(DriverLogin, \"/oE8DynVnr2o74O1ABspx8HnGQ4=\", false, function () {\n  return [useHistory];\n});\n\n_c = DriverLogin;\nexport default connect(mapStateToProps)(DriverLogin);\n\nvar _c;\n\n$RefreshReg$(_c, \"DriverLogin\");","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/components/Driver/DriverLogin.js"],"names":["React","useState","useEffect","useContext","useHistory","login","loginParams","ChangeActionLoading","ChangeActionLoggedIn","mapStateToProps","connect","DriverLogin","props","history","state","appState","dispatch","fields","setFields","model_name","console","log","loggedIn","push","userType","userId","onClick","event","preventDefault","Login","then","params","session","remember_me","response","data","user","id","catch","alert","message","e","phone_number","target","value","phone","password","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { login } from '../../utils/API';\r\nimport { loginParams } from \"../../utils/configs\";\r\nimport {ChangeActionLoading,\r\n        ChangeActionLoggedIn,\r\n        mapStateToProps} from '../../redux/actions'\r\nimport {connect} from \"react-redux\";\r\n\r\nconst DriverLogin = (props) => {\r\n  const history = useHistory()\r\n  const state = props.appState\r\n  const dispatch = props.dispatch\r\n    // const [authData, setAuthData] = useState(\r\n    //   {\r\n    //       'loggedIn': false, 'userType': 'None', 'userId': 'None'\r\n    //   })\r\n    const [fields, setFields] = useState({\r\n        ...loginParams,\r\n        model_name: 'Driver'\r\n    })\r\n    //\r\n    useEffect(() => {\r\n      console.log(state, 'driver login')\r\n        if (state.loggedIn) {\r\n            history.push(`/${state.userType}/${state.userId}`)\r\n        }\r\n    }, [])\r\n\r\n    const onClick = (event) => {\r\n      event.preventDefault()\r\n      dispatch(ChangeActionLoading({'isLoading': true}))\r\n      console.log(state, ' BEFOR LOGIN')\r\n      Login(event)\r\n        .then()\r\n    }\r\n    \r\n    const Login = async (event) => {\r\n      const params = {\r\n        session: {\r\n          ...fields,\r\n          remember_me: fields.remember_me === true ? '1': '0'\r\n        }\r\n      }\r\n      await login(params)\r\n        .then(response => {\r\n          dispatch(ChangeActionLoggedIn({\r\n            ...state,\r\n            'isLoading': false,\r\n            'loggedIn': true,\r\n            'userType': '',\r\n            'userId': ''\r\n          }))\r\n          console.log(state, ' AFTER LOGIN')\r\n          history.push(`/${response.data.model_name}/${response.data.user.id}`)\r\n        })\r\n        .catch(response => {\r\n          dispatch(ChangeActionLoggedIn({\r\n            ...state,\r\n            'isLoading': false,\r\n          }))\r\n          setFields({ ...fields, alert: response.message })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className=\"w-25 border position-absolute top-50 start-50 translate-middle\">\r\n                <div className=\"me-3 mx-3\">\r\n                    <br />\r\n                    <h5>Driver Login</h5>\r\n                    <label htmlFor=\"phone\" className=\"form-label\">Phone</label>\r\n                    <input onClick={() => {\r\n                      setFields({ ...fields, alert: '' })\r\n                    }}\r\n                           onChange={(e) => {\r\n                             setFields({ ...fields, phone_number: e.target.value })\r\n                           }}\r\n                           id=\"phone\"\r\n                           type=\"number\"\r\n                           className=\"form-control\"\r\n                           value={fields.phone} />\r\n                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                    <input onClick={() => {\r\n                      setFields({ ...fields, alert: '' })\r\n                    }}\r\n                           onChange={(e) => {\r\n                             setFields({ ...fields, password: e.target.value })\r\n                           }}\r\n                           id=\"password\"\r\n                           type=\"password\"\r\n                           className=\"form-control\"\r\n                           value={fields.password} />\r\n                  \r\n                    <label htmlFor=\"rememberMe\" className=\"form-label\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      name=\"rememberMe\"\r\n                      type=\"checkbox\"\r\n                      checked={fields.remember_me}\r\n                      onChange={ (event) =>  setFields({\r\n                          ...fields,\r\n                          remember_me: event.target.checked\r\n                      })\r\n                      } />\r\n                        Remember\r\n                    </label>\r\n                    <p>{fields.alert}</p>\r\n                </div>\r\n                <button onClick={(e) => {\r\n                  onClick(e)\r\n                  }\r\n                } type=\"submit\" className=\"btn btn-outline-success mx-3 mb-3\">Submit</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(DriverLogin);\r\n"]},"metadata":{},"sourceType":"module"}
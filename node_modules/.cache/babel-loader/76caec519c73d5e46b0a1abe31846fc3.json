{"ast":null,"code":"import { signUp } from './API';\nimport { ChangeActionLoading, ChangeActionLoggedIn } from '../redux/actions';\n\nconst onClickBtn = (event, Fields, SetFields, State, Dispatch, History, Params) => {\n  event.preventDefault();\n\n  const SignUp = async (fields, setFields, state, dispatch, history, params) => {\n    await signUp(params).then(response => {\n      dispatch(ChangeActionLoggedIn({ ...state,\n        isLoading: false,\n        loggedIn: true,\n        userType: response.data.userType,\n        userId: response.data.user.id\n      }));\n      history.push(`/${response.data.userType}/${response.data.user.id}`);\n    }).catch(response => {\n      const errors = [];\n\n      if (response.status === 500) {\n        errors.push('This phone number registered');\n        dispatch(ChangeActionLoading({\n          isLoading: false\n        }));\n        setFields({ ...fields,\n          alert: errors\n        });\n      } else if (!response.created) {\n        Object.entries(response.errors).map(error => {\n          errors.push(`${error[0]} ${error[1]}`);\n          return errors;\n        });\n        setFields({ ...fields,\n          alert: errors\n        });\n      } else {\n        setFields({ ...fields,\n          alert: response.message\n        });\n      }\n    });\n  };\n\n  SignUp(Fields, SetFields, State, Dispatch, History, Params).then();\n};\n\nexport default onClickBtn;","map":{"version":3,"sources":["D:/VinetiWorkSpace/final-project-GG/src/utils/SignupOnClick.js"],"names":["signUp","ChangeActionLoading","ChangeActionLoggedIn","onClickBtn","event","Fields","SetFields","State","Dispatch","History","Params","preventDefault","SignUp","fields","setFields","state","dispatch","history","params","then","response","isLoading","loggedIn","userType","data","userId","user","id","push","catch","errors","status","alert","created","Object","entries","map","error","message"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,kBAA1D;;AAEA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA4CC,OAA5C,EAAqDC,MAArD,KAAgE;AACjFN,EAAAA,KAAK,CAACO,cAAN;;AACA,QAAMC,MAAM,GAAG,OAAOC,MAAP,EAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,QAAjC,EAA2CC,OAA3C,EAAoDC,MAApD,KAA+D;AAC5E,UAAMlB,MAAM,CAACkB,MAAD,CAAN,CACHC,IADG,CACGC,QAAD,IAAc;AAClBJ,MAAAA,QAAQ,CAACd,oBAAoB,CAAC,EAC5B,GAAGa,KADyB;AAE5BM,QAAAA,SAAS,EAAE,KAFiB;AAG5BC,QAAAA,QAAQ,EAAE,IAHkB;AAI5BC,QAAAA,QAAQ,EAAEH,QAAQ,CAACI,IAAT,CAAcD,QAJI;AAK5BE,QAAAA,MAAM,EAAEL,QAAQ,CAACI,IAAT,CAAcE,IAAd,CAAmBC;AALC,OAAD,CAArB,CAAR;AAOAV,MAAAA,OAAO,CAACW,IAAR,CAAc,IAAGR,QAAQ,CAACI,IAAT,CAAcD,QAAS,IAAGH,QAAQ,CAACI,IAAT,CAAcE,IAAd,CAAmBC,EAAG,EAAjE;AACD,KAVG,EAWHE,KAXG,CAWIT,QAAD,IAAc;AACnB,YAAMU,MAAM,GAAG,EAAf;;AACA,UAAIV,QAAQ,CAACW,MAAT,KAAoB,GAAxB,EAA6B;AAC3BD,QAAAA,MAAM,CAACF,IAAP,CAAY,8BAAZ;AACAZ,QAAAA,QAAQ,CAACf,mBAAmB,CAAC;AAAEoB,UAAAA,SAAS,EAAE;AAAb,SAAD,CAApB,CAAR;AACAP,QAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAamB,UAAAA,KAAK,EAAEF;AAApB,SAAD,CAAT;AACD,OAJD,MAIO,IAAI,CAACV,QAAQ,CAACa,OAAd,EAAuB;AAC5BC,QAAAA,MAAM,CAACC,OAAP,CAAef,QAAQ,CAACU,MAAxB,EAAgCM,GAAhC,CAAqCC,KAAD,IAAW;AAC7CP,UAAAA,MAAM,CAACF,IAAP,CAAa,GAAES,KAAK,CAAC,CAAD,CAAI,IAAGA,KAAK,CAAC,CAAD,CAAI,EAApC;AACA,iBAAOP,MAAP;AACD,SAHD;AAIAhB,QAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAamB,UAAAA,KAAK,EAAEF;AAApB,SAAD,CAAT;AACD,OANM,MAMA;AACLhB,QAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAamB,UAAAA,KAAK,EAAEZ,QAAQ,CAACkB;AAA7B,SAAD,CAAT;AACD;AACF,KA1BG,CAAN;AA2BD,GA5BD;;AA8BA1B,EAAAA,MAAM,CAACP,MAAD,EAASC,SAAT,EAAoBC,KAApB,EAA2BC,QAA3B,EAAqCC,OAArC,EAA8CC,MAA9C,CAAN,CACGS,IADH;AAED,CAlCD;;AAmCA,eAAehB,UAAf","sourcesContent":["import { signUp } from './API';\nimport { ChangeActionLoading, ChangeActionLoggedIn } from '../redux/actions';\n\nconst onClickBtn = (event, Fields, SetFields, State, Dispatch, History, Params) => {\n  event.preventDefault();\n  const SignUp = async (fields, setFields, state, dispatch, history, params) => {\n    await signUp(params)\n      .then((response) => {\n        dispatch(ChangeActionLoggedIn({\n          ...state,\n          isLoading: false,\n          loggedIn: true,\n          userType: response.data.userType,\n          userId: response.data.user.id,\n        }));\n        history.push(`/${response.data.userType}/${response.data.user.id}`);\n      })\n      .catch((response) => {\n        const errors = [];\n        if (response.status === 500) {\n          errors.push('This phone number registered');\n          dispatch(ChangeActionLoading({ isLoading: false }));\n          setFields({ ...fields, alert: errors });\n        } else if (!response.created) {\n          Object.entries(response.errors).map((error) => {\n            errors.push(`${error[0]} ${error[1]}`);\n            return errors;\n          });\n          setFields({ ...fields, alert: errors });\n        } else {\n          setFields({ ...fields, alert: response.message });\n        }\n      });\n  };\n\n  SignUp(Fields, SetFields, State, Dispatch, History, Params)\n    .then();\n};\nexport default onClickBtn;\n"]},"metadata":{},"sourceType":"module"}